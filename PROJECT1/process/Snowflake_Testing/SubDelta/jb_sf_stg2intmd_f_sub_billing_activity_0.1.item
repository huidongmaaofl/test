<?xml version="1.0" encoding="UTF-8"?>
<talendfile:ProcessType xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:talendfile="platform:/resource/org.talend.model/model/TalendFile.xsd" defaultContext="Default">
  <context confirmationNeeded="false" name="Default"/>
  <parameters>
    <elementParameter field="TEXT" name="SCREEN_OFFSET_X" value="0"/>
    <elementParameter field="TEXT" name="SCREEN_OFFSET_Y" value="0"/>
    <elementParameter field="TEXT" name="REPOSITORY_CONNECTION_ID" value=""/>
    <elementParameter field="CHECK" name="IMPLICITCONTEXT_USE_PROJECT_SETTINGS" value="true"/>
    <elementParameter field="CHECK" name="STATANDLOG_USE_PROJECT_SETTINGS" value="true"/>
    <elementParameter field="CHECK" name="MULTI_THREAD_EXECATION" value="false"/>
    <elementParameter field="TEXT" name="PARALLELIZE_UNIT_SIZE" value="25000"/>
    <elementParameter field="CHECK" name="IMPLICIT_TCONTEXTLOAD" value="false"/>
    <elementParameter field="RADIO" name="FROM_FILE_FLAG_IMPLICIT_CONTEXT" value="false"/>
    <elementParameter field="RADIO" name="FROM_DATABASE_FLAG_IMPLICIT_CONTEXT" value="false"/>
    <elementParameter field="FILE" name="IMPLICIT_TCONTEXTLOAD_FILE" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="FIELDSEPARATOR" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="PROPERTY_TYPE_IMPLICIT_CONTEXT:PROPERTY_TYPE" value=""/>
    <elementParameter field="TECHNICAL" name="PROPERTY_TYPE_IMPLICIT_CONTEXT:REPOSITORY_PROPERTY_TYPE" value=""/>
    <elementParameter field="CLOSED_LIST" name="DB_TYPE_IMPLICIT_CONTEXT" value=""/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION_IMPLICIT_CONTEXT" value=""/>
    <elementParameter field="TEXT" name="URL_IMPLICIT_CONTEXT" value="&quot;&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR_IMPLICIT_CONTEXT"/>
    <elementParameter field="TEXT" name="DRIVER_CLASS_IMPLICIT_CONTEXT" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="HOST_IMPLICIT_CONTEXT" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="PORT_IMPLICIT_CONTEXT" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="DBNAME_IMPLICIT_CONTEXT" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="LOCAL_SERVICE_NAME_IMPLICIT_CONTEXT" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="PROPERTIES_IMPLICIT_CONTEXT" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB_IMPLICIT_CONTEXT" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER_IMPLICIT_CONTEXT" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS_IMPLICIT_CONTEXT" value="0RMsyjmybrE="/>
    <elementParameter field="FILE" name="DBFILE_IMPLICIT_CONTEXT" value="&quot;&quot;"/>
    <elementParameter field="DBTABLE" name="DBTABLE_IMPLICIT_CONTEXT" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="QUERY_CONDITION_IMPLICIT_CONTEXT" value="&quot;&quot;"/>
    <elementParameter field="CLOSED_LIST" name="LOAD_NEW_VARIABLE" value=""/>
    <elementParameter field="CLOSED_LIST" name="NOT_LOAD_OLD_VARIABLE" value=""/>
    <elementParameter field="CHECK" name="PRINT_OPERATIONS" value="false"/>
    <elementParameter field="CHECK" name="DISABLE_ERROR" value="false"/>
    <elementParameter field="CHECK" name="DISABLE_WARNINGS" value="false"/>
    <elementParameter field="CHECK" name="DISABLE_INFO" value="false"/>
    <elementParameter field="CHECK" name="ON_STATCATCHER_FLAG" value="false"/>
    <elementParameter field="CHECK" name="ON_LOGCATCHER_FLAG" value="true"/>
    <elementParameter field="CHECK" name="ON_METERCATCHER_FLAG" value="false"/>
    <elementParameter field="CHECK" name="ON_CONSOLE_FLAG" value="true"/>
    <elementParameter field="CHECK" name="ON_FILES_FLAG" value="false"/>
    <elementParameter field="DIRECTORY" name="FILE_PATH" value="&quot;C:/Talend/5.6.2/studio/workspace/.metadata&quot;"/>
    <elementParameter field="TEXT" name="FILENAME_STATS" value="&quot;stats_file.txt&quot;"/>
    <elementParameter field="TEXT" name="FILENAME_LOGS" value="&quot;logs_file.txt&quot;"/>
    <elementParameter field="TEXT" name="FILENAME_METTER" value="&quot;meter_file.txt&quot;"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" value="ISO-8859-15"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="CHECK" name="ON_DATABASE_FLAG" value="true"/>
    <elementParameter field="TECHNICAL" name="PROPERTY_TYPE:PROPERTY_TYPE" value="REPOSITORY"/>
    <elementParameter field="TECHNICAL" name="PROPERTY_TYPE:REPOSITORY_PROPERTY_TYPE" value="_BCUy0FT7Eeaxx-GQ_IpdbQ"/>
    <elementParameter field="CLOSED_LIST" name="DB_TYPE" value="tJDBCOutput"/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION" value="PRIOR_TO_V9"/>
    <elementParameter field="TEXT" name="URL" value="&quot;jdbc:snowflake://ageoflearning.snowflakecomputing.com/?role=etl_worker&amp;db=aoflprod&amp;schema=abc_edw_stg&amp;warehouse=abc_etl_wh&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR">
      <elementValue elementRef="JAR_NAME" value="snowflake-jdbc-3.0.11.jar"/>
    </elementParameter>
    <elementParameter field="TEXT" name="DRIVER_CLASS" value="&quot;net.snowflake.client.jdbc.SnowflakeDriver&quot;"/>
    <elementParameter field="TEXT" name="HOST" value="context.Redshift_Conn_Server"/>
    <elementParameter field="TEXT" name="PORT" value="context.Redshift_Conn_Port"/>
    <elementParameter field="TEXT" name="DATASOURCE" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="DBNAME" value=""/>
    <elementParameter field="TEXT" name="LOCAL_SERVICE_NAME" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="PROPERTIES" value="&quot;noDatetimeStringSync=true&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" value=""/>
    <elementParameter field="TEXT" name="USER" value="&quot;talend_etl&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" value="ZWL+OPUW6faJdkOhlz1EnbTCuWuA5Z5cV24ZL5IpQi9kLPN+enSvEQ=="/>
    <elementParameter field="FILE" name="DBFILE" value="&quot;&quot;"/>
    <elementParameter field="DBTABLE" name="TABLE_STATS" value="&quot;&quot;"/>
    <elementParameter field="DBTABLE" name="TABLE_LOGS" value="&quot;abc_edw_meta.AOFL_PROJECT_LOGS&quot;"/>
    <elementParameter field="DBTABLE" name="TABLE_METER" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="CATCH_RUNTIME_ERRORS" value="true"/>
    <elementParameter field="CHECK" name="CATCH_USER_ERRORS" value="true"/>
    <elementParameter field="CHECK" name="CATCH_USER_WARNING" value="true"/>
    <elementParameter field="CHECK" name="CATCH_REALTIME_STATS" value="false"/>
    <elementParameter field="TEXT" name="HEADERFOOTER_HEADERID" value=""/>
    <elementParameter field="CHECK" name="HEADER_ENABLED" value="false"/>
    <elementParameter field="TEXT" name="HEADER_LIBRARY" value=""/>
    <elementParameter field="TEXT" name="HEADER_CODE" value=""/>
    <elementParameter field="TEXT" name="HEADER_IMPORT" value=""/>
    <elementParameter field="TEXT" name="HEADERFOOTER_FOOTERID" value=""/>
    <elementParameter field="CHECK" name="FOOTER_ENABLED" value="false"/>
    <elementParameter field="TEXT" name="FOOTER_LIBRARY" value=""/>
    <elementParameter field="TEXT" name="FOOTER_CODE" value=""/>
    <elementParameter field="TEXT" name="FOOTER_IMPORT" value=""/>
    <routinesParameter id="_UyiNIPX0EeWWKsygvsCDwg" name="DQTechnical"/>
    <routinesParameter id="_pC_O0PVVEeW3v-xk1uty1w" name="DataOperation"/>
    <routinesParameter id="_UvTS8PX0EeWWKsygvsCDwg" name="DataQuality"/>
    <routinesParameter id="_UxN-gPX0EeWWKsygvsCDwg" name="DqStringHandling"/>
    <routinesParameter id="_pEkjMPVVEeW3v-xk1uty1w" name="Mathematical"/>
    <routinesParameter id="_pFyEIPVVEeW3v-xk1uty1w" name="Numeric"/>
    <routinesParameter id="_pHCoYPVVEeW3v-xk1uty1w" name="Relational"/>
    <routinesParameter id="_pNGNEPVVEeW3v-xk1uty1w" name="SQLike"/>
    <routinesParameter id="_pINGAPVVEeW3v-xk1uty1w" name="StringHandling"/>
    <routinesParameter id="_pJam8PVVEeW3v-xk1uty1w" name="TalendDataGenerator"/>
    <routinesParameter id="_pKoH4PVVEeW3v-xk1uty1w" name="TalendDate"/>
    <routinesParameter id="_pL7vcPVVEeW3v-xk1uty1w" name="TalendString"/>
    <routinesParameter id="_FL47UNKuEeKnXdHKUaxwnQ" name="CheckZip"/>
    <routinesParameter id="_xFoiYOSuEeKgRuMsU-Aatw" name="GeoLocationCalculation"/>
    <routinesParameter id="_fxLlYMqZEeW_Wu7kq_dgpA" name="HtmlGeneration2"/>
    <routinesParameter id="_Yql8wKjlEeWukotDNJTWbg" name="HtmlGeneration"/>
    <routinesParameter id="_9aoGcKT9EeW80p8IK1FyUQ" name="QuerySplitter"/>
    <routinesParameter id="_u4W7IJJjEea7f4xH-7-lGA" name="compressFiles_in_GZIP_Format"/>
    <routinesParameter id="_FL47UNKuEeKnXdHKUaxwnQ" name="CheckZip"/>
    <routinesParameter id="_xFoiYOSuEeKgRuMsU-Aatw" name="GeoLocationCalculation"/>
    <routinesParameter id="_fxLlYMqZEeW_Wu7kq_dgpA" name="HtmlGeneration2"/>
    <routinesParameter id="_Yql8wKjlEeWukotDNJTWbg" name="HtmlGeneration"/>
    <routinesParameter id="_9aoGcKT9EeW80p8IK1FyUQ" name="QuerySplitter"/>
  </parameters>
  <node componentName="tJava" componentVersion="0.101" offsetLabelX="0" offsetLabelY="0" posX="96" posY="32">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJava_1"/>
    <elementParameter field="DIRECTORY" name="JAVA_LIBRARY_PATH" value="C:\Talend\Talend-Tools-Studio-20150508_1414-V5.6.2\configuration\lib\java"/>
    <elementParameter field="MEMO_JAVA" name="CODE" value="System.out.println(&quot;Job &quot; + jobName + &quot; is going to start to do subs delta changes on account history.&quot;);"/>
    <elementParameter field="MEMO_IMPORT" name="IMPORT" value="//import java.util.List;"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJava_1"/>
  </node>
  <node componentName="tJava" componentVersion="0.101" offsetLabelX="0" offsetLabelY="0" posX="288" posY="32">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJava_2"/>
    <elementParameter field="DIRECTORY" name="JAVA_LIBRARY_PATH" value="C:\Talend\Talend-Tools-Studio-20150508_1414-V5.6.2\configuration\lib\java"/>
    <elementParameter field="MEMO_JAVA" name="CODE" value="//Instantiate global params&#xA;globalMap.put(&quot;meta&quot;,&quot;abc_edw_meta&quot;);&#xA;globalMap.put(&quot;land&quot;,&quot;abc_edw_land&quot;);&#xA;globalMap.put(&quot;stg&quot;,&quot;abc_edw_stg&quot;);"/>
    <elementParameter field="MEMO_IMPORT" name="IMPORT" value="//import java.util.List;"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJava_2"/>
  </node>
  <node componentName="tJDBCConnection" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="96" posY="128">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCConnection_1"/>
    <elementParameter field="DIRECTORY" name="JAVA_LIBRARY_PATH" value="C:\Talend\Talend-Tools-Studio-20150508_1414-V5.6.2\configuration\lib\java"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:PROPERTY_TYPE" value="REPOSITORY"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:REPOSITORY_PROPERTY_TYPE" value="_BCUy0FT7Eeaxx-GQ_IpdbQ"/>
    <elementParameter field="TEXT" name="URL" value="&quot;jdbc:snowflake://ageoflearning.snowflakecomputing.com/?role=etl_worker&amp;db=aoflprod&amp;schema=abc_edw_stg&amp;warehouse=abc_etl_wh&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR">
      <elementValue elementRef="JAR_NAME" value="snowflake-jdbc-3.0.11.jar"/>
    </elementParameter>
    <elementParameter field="TEXT" name="DRIVER_CLASS" value="&quot;net.snowflake.client.jdbc.SnowflakeDriver&quot;"/>
    <elementParameter field="TEXT" name="USER" value="&quot;talend_etl&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" value="ZWL+OPUW6faJdkOhlz1EnbTCuWuA5Z5cV24ZL5IpQi9kLPN+enSvEQ=="/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="CHECK" name="USE_SHARED_CONNECTION" value="false"/>
    <elementParameter field="TEXT" name="SHARED_CONNECTION_NAME" value=""/>
    <elementParameter field="LABEL" name="NOTE" value="This option only applies when deploying and running in the Talend Runtime"/>
    <elementParameter field="CHECK" name="SPECIFY_DATASOURCE_ALIAS" value="false"/>
    <elementParameter field="TEXT" name="DATASOURCE_ALIAS" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="IS_USE_AUTO_COMMIT" value="true"/>
    <elementParameter field="CHECK" name="AUTO_COMMIT" value="true"/>
    <elementParameter field="TEXT" name="LABEL" value="snowflake"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
  </node>
  <node componentName="tJDBCRow" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="96" posY="256">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_1"/>
    <elementParameter field="DIRECTORY" name="JAVA_LIBRARY_PATH" value="C:\Talend\Talend-Tools-Studio-20150508_1414-V5.6.2\configuration\lib\java"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="true"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tJDBCConnection_1"/>
    <elementParameter field="TEXT" name="URL" value="&quot;jdbc:&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR"/>
    <elementParameter field="TEXT" name="DRIVER_CLASS" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" value="0RMsyjmybrE="/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;&#xD;&#xA;INSERT INTO &quot;+globalMap.get(&quot;meta&quot;)+&quot;.etl_job_log&#xD;&#xA;(&#xD;&#xA;   run_id,&#xD;&#xA;   job_id,&#xD;&#xA;   start_time,&#xD;&#xA;   job_name,&#xD;&#xA;   job_type,&#xD;&#xA;   job_status,&#xD;&#xA;   created_ts,&#xD;&#xA;   created_by,&#xD;&#xA;   last_updated_ts,&#xD;&#xA;   last_updated_by&#xD;&#xA;)&#xD;&#xA;SELECT&#xD;&#xA;  coalesce(last_row.run_id, 0) + 1 as run_id,&#xD;&#xA;  coalesce(last_row.job_id, 1) as job_id,&#xD;&#xA;  to_timestamp_ntz(CURRENT_TIMESTAMP()) as start_time,&#xD;&#xA;  '&quot;+jobName+&quot;' as job_name,&#xD;&#xA;  'sub_intmd_load' as job_type,&#xD;&#xA;  'BUSY' as job_status,&#xD;&#xA;  to_timestamp_ntz(CURRENT_TIMESTAMP()) as created_ts,&#xD;&#xA;  '&quot;+jobName+&quot;' as created_by,&#xD;&#xA;  to_timestamp_ntz(CURRENT_TIMESTAMP()) as last_updated_ts,&#xD;&#xA;  '&quot;+jobName+&quot;' as last_updated_by&#xD;&#xA;FROM&#xD;&#xA;(select * from&#xD;&#xA;    (select *, row_number() over (partition by job_name order by start_time desc)as rn&#xD;&#xA;    from&#xD;&#xA;      (select run_id, start_time, job_id, job_name from &quot;+globalMap.get(&quot;meta&quot;)+&quot;.etl_job_log where job_name = '&quot;+jobName+&quot;' &#xD;&#xA;        union&#xD;&#xA;       select 0, '1970-01-01 00:00:00':: timestamp, 0, '&quot;+jobName+&quot;'  --'&quot; + jobName + &quot;'&#xD;&#xA;      )&#xD;&#xA;     )&#xD;&#xA;     where rn = 1 &#xD;&#xA;  )&#xD;&#xA;  last_row&#xD;&#xA;;&#xD;&#xA;&quot;"/>
    <elementParameter field="CHECK" name="DIE_ON_ERROR" value="true"/>
    <elementParameter field="LABEL" name="NOTE" value="This option only applies when deploying and running in the Talend Runtime"/>
    <elementParameter field="CHECK" name="SPECIFY_DATASOURCE_ALIAS" value="false"/>
    <elementParameter field="TEXT" name="DATASOURCE_ALIAS" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="PROPAGATE_RECORD_SET" value="false"/>
    <elementParameter field="COLUMN_LIST" name="RECORD_SET_COLUMN" value=""/>
    <elementParameter field="CHECK" name="USE_PREPAREDSTATEMENT" value="false"/>
    <elementParameter field="TABLE" name="SET_PREPAREDSTATEMENT_PARAMETERS"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="TEXT" name="COMMIT_EVERY" value="10000"/>
    <elementParameter field="TEXT" name="LABEL" value="etl_job_log"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJDBCRow_1"/>
    <metadata connector="REJECT" name="REJECT">
      <column defaultValue="" key="false" length="255" name="errorCode" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
      <column defaultValue="" key="false" length="255" name="errorMessage" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tJDBCRow" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="288" posY="256">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_2"/>
    <elementParameter field="DIRECTORY" name="JAVA_LIBRARY_PATH" value="C:\Talend\Talend-Tools-Studio-20150508_1414-V5.6.2\configuration\lib\java"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="true"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tJDBCConnection_1"/>
    <elementParameter field="TEXT" name="URL" value="&quot;jdbc:&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR"/>
    <elementParameter field="TEXT" name="DRIVER_CLASS" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" value="0RMsyjmybrE="/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;&#xD;&#xA;DELETE FROM &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_f_sub_billing_activity  &#xD;&#xA;USING&#xD;&#xA;(select account_hist_id, payer_id, account_domain from &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_account_activity) intmd  -- V10, added payer_id;&#xD;&#xA;WHERE&#xD;&#xA;  intmd.account_hist_id = &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_f_sub_billing_activity.account_hist_id and&#xD;&#xA;  intmd.payer_id = &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_f_sub_billing_activity.payer_id and      -- V10 account hist id for china or taiwan can conflict with .com account hist id&#xD;&#xA;  intmd.account_domain = &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_f_sub_billing_activity.account_domain;&#xD;&#xA;&quot;"/>
    <elementParameter field="CHECK" name="DIE_ON_ERROR" value="true"/>
    <elementParameter field="LABEL" name="NOTE" value="This option only applies when deploying and running in the Talend Runtime"/>
    <elementParameter field="CHECK" name="SPECIFY_DATASOURCE_ALIAS" value="false"/>
    <elementParameter field="TEXT" name="DATASOURCE_ALIAS" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="PROPAGATE_RECORD_SET" value="false"/>
    <elementParameter field="COLUMN_LIST" name="RECORD_SET_COLUMN" value=""/>
    <elementParameter field="CHECK" name="USE_PREPAREDSTATEMENT" value="false"/>
    <elementParameter field="TABLE" name="SET_PREPAREDSTATEMENT_PARAMETERS"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="TEXT" name="COMMIT_EVERY" value="10000"/>
    <elementParameter field="TEXT" name="LABEL" value="intmd_f_sub_billing_activity"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJDBCRow_2"/>
    <metadata connector="REJECT" name="REJECT">
      <column defaultValue="" key="false" length="255" name="errorCode" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
      <column defaultValue="" key="false" length="255" name="errorMessage" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tJDBCRow" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="96" posY="384">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_3"/>
    <elementParameter field="DIRECTORY" name="JAVA_LIBRARY_PATH" value="C:\Talend\Talend-Tools-Studio-20150508_1414-V5.6.2\configuration\lib\java"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="true"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tJDBCConnection_1"/>
    <elementParameter field="TEXT" name="URL" value="&quot;jdbc:&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR"/>
    <elementParameter field="TEXT" name="DRIVER_CLASS" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" value="0RMsyjmybrE="/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;&#xD;&#xA;DELETE FROM &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_f_sub_billing_activity_reload;&#xD;&#xA;&quot;"/>
    <elementParameter field="CHECK" name="DIE_ON_ERROR" value="true"/>
    <elementParameter field="LABEL" name="NOTE" value="This option only applies when deploying and running in the Talend Runtime"/>
    <elementParameter field="CHECK" name="SPECIFY_DATASOURCE_ALIAS" value="false"/>
    <elementParameter field="TEXT" name="DATASOURCE_ALIAS" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="PROPAGATE_RECORD_SET" value="false"/>
    <elementParameter field="COLUMN_LIST" name="RECORD_SET_COLUMN" value=""/>
    <elementParameter field="CHECK" name="USE_PREPAREDSTATEMENT" value="false"/>
    <elementParameter field="TABLE" name="SET_PREPAREDSTATEMENT_PARAMETERS"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="TEXT" name="COMMIT_EVERY" value="10000"/>
    <elementParameter field="TEXT" name="LABEL" value="intmd_f_sub_billing_activity_&lt;br>reload"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJDBCRow_3"/>
    <metadata connector="REJECT" name="REJECT">
      <column defaultValue="" key="false" length="255" name="errorCode" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
      <column defaultValue="" key="false" length="255" name="errorMessage" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tJDBCRow" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="288" posY="384">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_4"/>
    <elementParameter field="DIRECTORY" name="JAVA_LIBRARY_PATH" value="C:\Talend\Talend-Tools-Studio-20150508_1414-V5.6.2\configuration\lib\java"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="true"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tJDBCConnection_1"/>
    <elementParameter field="TEXT" name="URL" value="&quot;jdbc:&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR"/>
    <elementParameter field="TEXT" name="DRIVER_CLASS" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" value="0RMsyjmybrE="/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;&#xD;&#xA;INSERT INTO &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_f_sub_billing_activity_reload-- V10 using a tmp reload table&#xD;&#xA;( &#xD;&#xA;        account_hist_id,&#xD;&#xA;        account_domain,&#xD;&#xA;        payer_id,&#xD;&#xA;        account_id, -- V10 added&#xD;&#xA;        account_type,&#xD;&#xA;        account_created_date,&#xD;&#xA;        account_next_billing_date,&#xD;&#xA;        activity_next_billing_date,&#xD;&#xA;        account_item_status,&#xD;&#xA;        account_item_discount,&#xD;&#xA;        product_id,&#xD;&#xA;        product_name,&#xD;&#xA;        product_phase,&#xD;&#xA;        product_opt_out,&#xD;&#xA;        trial_term,&#xD;&#xA;        trial_period,&#xD;&#xA;        renewal_term,&#xD;&#xA;        renewal_period,&#xD;&#xA;        product_payment_type,&#xD;&#xA;        activity_id,&#xD;&#xA;        activity_code,&#xD;&#xA;        activity_desc,&#xD;&#xA;        activity_date,&#xD;&#xA;        activity_day,&#xD;&#xA;        activity_year_month,&#xD;&#xA;        activity_price,&#xD;&#xA;        acquisition_channel,  -- V10 removed unused first_activity_year_month field&#xD;&#xA;        acquisition_source,&#xD;&#xA;        acquisition_user_agent,&#xD;&#xA;        termination_date,&#xD;&#xA;        trx_date,&#xD;&#xA;        trx_reason,&#xD;&#xA;        trx_processor,&#xD;&#xA;        trx_updater,&#xD;&#xA;        trx_result,&#xD;&#xA;        trx_error_code,&#xD;&#xA;        trx_amount,&#xD;&#xA;        trx_payment_type,&#xD;&#xA;        trx_history_id,&#xD;&#xA;        trx_cc_type,&#xD;&#xA;        trx_voided,&#xD;&#xA;        trx_voided_date,&#xD;&#xA;        trx_settled_date,&#xD;&#xA;        conversion_activity_date,&#xD;&#xA;        conversion_activity_id,&#xD;&#xA;        is_subscription_event,&#xD;&#xA;        is_activation_event,&#xD;&#xA;        is_reactivation_event,&#xD;&#xA;        is_upgrade_event,&#xD;&#xA;        is_assessment_event,&#xD;&#xA;        is_deactivation_event,&#xD;&#xA;        is_termination_event,&#xD;&#xA;        is_paying_event,&#xD;&#xA;        is_in_active_trial,&#xD;&#xA;        is_subscription,&#xD;&#xA;        is_third_party_subscription,&#xD;&#xA;        is_incentivized_subscription,&#xD;&#xA;        is_activation,&#xD;&#xA;        is_third_party_activation,&#xD;&#xA;        is_third_party_renewal,&#xD;&#xA;        is_reactivation,&#xD;&#xA;        is_third_party_reactivation,&#xD;&#xA;        is_upgrade,&#xD;&#xA;        is_assessment,&#xD;&#xA;        is_optout_cancellation,&#xD;&#xA;        is_renewal_success,&#xD;&#xA;        is_renewal_retry_success,&#xD;&#xA;        is_installment_success,  -- V9 added&#xD;&#xA;        is_installment_retry_success,  -- V9 added&#xD;&#xA;        is_renewal_special_retry_success,&#xD;&#xA;        is_renewal_decline,&#xD;&#xA;        is_renewal_retry_decline,&#xD;&#xA;        is_renewal_special_retry_decline,  -- V9 added&#xD;&#xA;        is_no_auto_renewal_deactivation,&#xD;&#xA;        is_cancellation_deactivation,&#xD;&#xA;        is_renewal_decline_deactivation,&#xD;&#xA;        is_third_party_deactivation,&#xD;&#xA;        is_subscription_retry_failure,&#xD;&#xA;        is_refund,&#xD;&#xA;        is_refund_deactivation,&#xD;&#xA;        is_renewal_voided,&#xD;&#xA;        is_installment_voided,  -- V9 added&#xD;&#xA;        is_deleted,&#xD;&#xA;        src_last_updated_ts,&#xD;&#xA;        is_unknown_account,&#xD;&#xA;        subscription_group,&#xD;&#xA;&#x9;&#x9;old_subscription_group,&#xD;&#xA;        subscription_metric_group_name,&#xD;&#xA;        billing_metric_group_name,&#xD;&#xA;        is_paid,&#xD;&#xA;        next_renewal_or_termination_forward_day,&#xD;&#xA;        created_ts,  &#xD;&#xA;        created_by  &#xD;&#xA;)&#xD;&#xA;with delta_hist_rows as&#xD;&#xA;(select -- process new rows from delta table&#xD;&#xA;  act.account_hist_id,&#xD;&#xA;  act.account_domain,&#xD;&#xA;  act.payer_id,&#xD;&#xA;  act.account_id, -- V10 added so we can join back to accounts&#xD;&#xA;  act.account_type, &#xD;&#xA;  act.account_created_date,  -- V8 created date and next billing date will be null for non-existent accounts&#xD;&#xA;  act.account_next_billing_date,  -- V8 created date and next billing date will be null for non-existent accounts&#xD;&#xA;  act.next_billing_date,&#xD;&#xA;  act.account_item_status,&#xD;&#xA;  act.account_item_discount,&#xD;&#xA;  act.product_id,&#xD;&#xA;  act.product_name,&#xD;&#xA;  act.product_phase,&#xD;&#xA;  act.product_opt_out,&#xD;&#xA;  act.trial_term,&#xD;&#xA;  act.trial_period,&#xD;&#xA;  act.renewal_term,&#xD;&#xA;  act.renewal_period,&#xD;&#xA;  act.gift_product,--V17&#xD;&#xA;  act.third_party_type,--V17&#xD;&#xA;  act.product_payment_type,&#xD;&#xA;  act.activity_id,&#xD;&#xA;  at.activity_code,&#xD;&#xA;  at.activity_desc,&#xD;&#xA;  act.activity_date,&#xD;&#xA;  act.activity_day,&#xD;&#xA;  act.activity_year_month,  -- V10 added prefix&#xD;&#xA;  act.activity_price,&#xD;&#xA;  coalesce(ch.channel, '') as acquisition_channel,&#xD;&#xA;  coalesce(ch.source, '') as acquisition_source,&#xD;&#xA;  coalesce(di.user_agent, '') as acquisition_user_agent,&#xD;&#xA;  act.termination_date,&#xD;&#xA;  act.trx_date,&#xD;&#xA;  act.trx_reason,&#xD;&#xA;  act.trx_processor,&#xD;&#xA;  act.trx_updater,&#xD;&#xA;  act.trx_result,&#xD;&#xA;  act.trx_error_code,&#xD;&#xA;  act.trx_amount,&#xD;&#xA;  act.trx_payment_type,&#xD;&#xA;  act.trx_history_id,&#xD;&#xA;  act.trx_cc_type,&#xD;&#xA;  act.trx_voided,&#xD;&#xA;  act.trx_voided_date,&#xD;&#xA;  act.trx_settled_date,&#xD;&#xA;  act.conversion_activity_date,&#xD;&#xA;  act.conversion_activity_id,&#xD;&#xA;  -- indicators for non-account type related events; account type based rules will create problems when reloading historical data where the account type has changed&#xD;&#xA;  case when (act.activity_id in (1000) and coalesce(ch.channel, '') &lt;> 'Incentivized'/*--V17 new sub groups still count these*/) or act.activity_id in (1060) then 1 else 0 end as is_subscription_event, -- V17 remove incentivized from the first party subscription events&#xD;&#xA;  case when (act.activity_id in (1000, 1030, 1050, 6020, 2000, 2020, 2070, 2060, 2300, 2320) and (act.trx_reason is not null and act.trx_reason >= 2000)) or (act.activity_id in (1060, 1070) and act.trial_term = 0) or act.activity_id = 2090 then 1 else 0 end as is_activation_event, -- V8 remove 6010 change plan transaction&#xD;&#xA;  case when act.activity_id in (1030, 1050, 1070) then 1 else 0 end as is_reactivation_event,  -- V9 add 1030&#xD;&#xA;  case when act.activity_id in (6020) then 1 else 0 end as is_upgrade_event,&#xD;&#xA;  case when act.activity_id in (6040) then 1 else 0 end as is_assessment_event,&#xD;&#xA;    -- V8 add deactivation event&#xD;&#xA;  case when act.activity_id in (1020, 2040, 2100, 2120, 2500, 2700) or -- V9 removed 1100 from deact and term&#xD;&#xA;            act.activity_id in (1009, 1069, 1079, 2009, 2029, 2069, 2079, 2099, 3000, 7009) -- V9 add refund deactivations to deactivation events, but not partial refunds&#xD;&#xA;       then 1 else 0 end as is_deactivation_event,&#xD;&#xA;  -- V8 add termination event, V9 remove activity 1100&#xD;&#xA;  case when act.activity_id in (2040, 2050, 2100, 2120, 2200, 2600, 2700, 2800, 3000) then 1 else 0 end as is_termination_event,&#xD;&#xA;  case when act.activity_id in (2000, 2020, 2060, 2070, 2090, 2300, 2320, 2530, 6040, 6050, 6100) or -- installment or renewal payments, other purchases -- V9 add 6010&#xD;&#xA;            (act.activity_id in (1000, 1030, 1050, 6010, 6020) and (act.trx_reason is not null and act.trx_reason >= 2000)) or -- first party activations, V16 remove duplicate filter&#xD;&#xA;            (act.activity_id in (1030, 1060, 1070) and act.trial_term = 0) then 1 -- V9 added 1030 reactivation, V16 remove 'allow null products (some reactivations don't show one)'&#xD;&#xA;       else 0   &#xD;&#xA;  end as is_paying_event,  &#xD;&#xA;  case when act.trial_term > 0 and act.product_phase = 1 then 1 else 0 end is_in_active_trial,&#xD;&#xA;  -- indicators for subscription, note: having filters on account_type introduces errors in historical loads when the account type is not the same as it was at the time of the transaction&#xD;&#xA;  case when act.activity_id = 1000 and act.product_phase > 0 then 1 else 0 end as is_subscription, -- V16 remove acount type filter&#xD;&#xA;  case when act.activity_id = 1060 then 1 else 0 end as is_third_party_subscription,&#xD;&#xA;  -- note: in mySQL fact_5 (subscribers), there are 2 entries for accounts with history starting on a 1000 activity and including a conversion date&#xD;&#xA;  -- the first date is the regular subscription date (1000) and the second date is the conversion date&#xD;&#xA;  -- for accounts that came in on 1900, only the conversion date is kept&#xD;&#xA;  case when act.conversion_activity_id is not null then 1 else 0 end as is_incentivized_subscription,&#xD;&#xA;  case when act.activity_id in (1000, 1030, 1050, 6020, 2000, 2020, 2070, 2060, /* 6010, */ 2300, 2320) and (act.trx_reason is not null and act.trx_reason >= 2000) then 1 else 0 end as is_activation, -- V8 remove 6010&#xD;&#xA;  case when act.activity_id in (1060, 1070) and act.trial_term = 0 then 1 else 0 end as is_third_party_activation,&#xD;&#xA;  case when act.activity_id = 2090 then 1 else 0 end as is_third_party_renewal,  -- the first 3d party renewal counts as an activation&#xD;&#xA;  case when act.account_type in (1,13) and act.activity_id = 1050 and act.product_phase > 0 then 1 else 0 end as is_reactivation,&#xD;&#xA;  case when act.activity_id = 1070 then 1 else 0 end as is_third_party_reactivation,&#xD;&#xA;  case when act.account_type in (1,13) and act.activity_id = 6020 then 1 else 0 end as is_upgrade,&#xD;&#xA;  case when ((act.activity_id = 6040 and act.product_phase > 0 ) or act.activity_id = 6050) then 1 else 0 end as is_assessment,&#xD;&#xA;  -- indicators for billing, note: having filters on account_type introduces errors in historical loads when the account type is not the same as it was at the time of the transaction&#xD;&#xA;  -- V9 added account type 2 (teacher) to all billing indicators&#xD;&#xA;  -- V10 added account type 7 (demo), 18  gift card&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14, 17, 18) and act.activity_id = 1100 then 1 else 0 end as is_optout_cancellation, -- V8 add types 14, 17&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14, 17, 18) and act.activity_id in (2000, 2060, 2090) then 1 else 0 end as is_renewal_success,   -- V8 add types 14, 17, add 2090 (3rd party renewal) activity; V10 add 2060 user renewal success&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14, 17, 18) and act.activity_id in (2020) then 1 else 0 end as is_renewal_retry_success, -- V8 add types 14, 17&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14, 17, 18) and act.activity_id in (2300) then 1 else 0 end as is_installment_success,   -- V9 separate from renewal success&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14, 17, 18) and act.activity_id in (2320) then 1 else 0 end as is_installment_retry_success, -- V9 separate from renewal success&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14, 17, 18) and act.activity_id = 2070 then 1 else 0 end as is_renewal_special_retry_success, -- V8 add types 14, 17&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14, 17, 18) and act.activity_id = 2010 then 1 else 0 end as is_renewal_decline, -- V8 add types 14, 17&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14, 17, 18) and act.activity_id = 2030 then 1 else 0 end as is_renewal_retry_decline,&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14, 17, 18) and act.activity_id = 2080 then 1 else 0 end as is_renewal_special_retry_decline,  -- V9 added&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14, 17, 18) and act.activity_id = 2050 then 1 else 0 end as is_no_auto_renewal_deactivation, -- V8 added&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14, 17, 18) and act.activity_id = 2100 then 1 else 0 end as is_cancellation_deactivation, -- need to check this against the activation date to report a paid cancellation deactivation&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14 ,17, 18) and act.activity_id = 2040 then 1 else 0 end as is_renewal_decline_deactivation, -- -- need to check this against the activation date to report a paid renewal decline deactivation&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14, 17, 18) and act.activity_id = 2700 then 1 else 0 end as is_third_party_deactivation,  -- V8 add account type check, need to check this against the activation date to report a paid third party deactivation&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14, 17, 18) and act.activity_id = 7010 then 1 else 0 end as is_subscription_retry_failure,  -- V8 added &#xD;&#xA;  -- V8 these are partial refunds with transactions found in account_history&#xD;&#xA;  case when coalesce(act.trx_voided, 0) = 0 and upper(act.trx_payment_type) in ('AMZ', 'E4', 'MES', 'PMT', 'PP', 'CK', 'CC') and lower(act.trx_result) in ('success', 'approved') and act.trx_reason in (4000, 4010, 4020, 4030, 4040) then 1 else 0 end as is_refund, -- V8 new rules for refunds, V9 removed settled date filter&#xD;&#xA;  -- V8 refund deactivations are to be found in the transactions not linked to account history&#xD;&#xA;  -- V9 added type 2 (teacher), added activity id 2069 for refund deactivations, removed 1039, 1056 and 3010 (partial refund)&#xD;&#xA;  -- V10 added account type 7 (demo), 18 (gift card)&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14 ,17, 18) and act.activity_id in (1009, 1069, 1079, 2009, 2029, 2069, 2079, 2099, 3000, 7009) then 1 else 0 end as is_refund_deactivation, -- need to check this against the activation date to report a paid refund deactivation&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14 ,17, 18) and act.activity_id in (2009, 2029, 2069, 2079, 2099) then 1 else 0 end as is_renewal_voided, --  V8 added field&#xD;&#xA;  case when act.account_type in (1, 2, 7, 13, 14 ,17, 18) and act.activity_id in (2309, 2329) then 1 else 0 end as is_installment_voided, --  V9 added &#xD;&#xA;  act.is_deleted,  -- V8 virtual delete&#xD;&#xA;  act.src_last_updated_ts,  -- V8 last updated from source system&#xD;&#xA;  is_unknown_account -- V10 compute this in inner query&#xD;&#xA;from&#xD;&#xA;-- V10 add history rows as source rows to be able to re-write history &#xD;&#xA;--     for instance: when a subscription group changes because of an upgrade&#xD;&#xA;--     or to acknowledge an account previously unknown that is now found in the accounts table&#xD;&#xA;(select  -- act sub-query, joins delta rows + plus full history for all payers involved in delta rows to accounts &amp; products&#xD;&#xA;    delta_and_hist.*, &#xD;&#xA;    case  -- V10 preserve the account_type change history&#xD;&#xA;        when (delta_and_hist.provenance = 'hist' and delta_and_hist.delta_hist_account_type is null) or delta_and_hist.provenance = 'delta' then&#xD;&#xA;           coalesce(account.account_type, &#xD;&#xA;              case  -- V8 tentative account type for non-existent accounts&#xD;&#xA;                 when delta_and_hist.activity_id in (1060, 1069, 1070, 1079, 2090, 2099, 2700, 2709, 6050, 6059) then 17 -- third party activities&#xD;&#xA;                 -- V8 beware than account type will be null on entries without a product&#xD;&#xA;                 when product.trial_term = 0 then 1 -- subscribed to a paying product, no trial&#xD;&#xA;                 when product.trial_term &lt;> 0 then 13 -- subscribed to a product with a trial period&#xD;&#xA;              end)&#xD;&#xA;        else delta_and_hist.delta_hist_account_type&#xD;&#xA;    end as account_type,&#xD;&#xA;    case when account.account_type is null then 1 else 0 end as is_unknown_account,  -- V10, moved to inner query&#xD;&#xA;    account.account_created_date,&#xD;&#xA;    account_next_billing_date,&#xD;&#xA;    product.name as product_name,&#xD;&#xA;    product.trial_term,&#xD;&#xA;    product.trial_period,&#xD;&#xA;    product.renewal_term,&#xD;&#xA;    product.renewal_period,&#xD;&#xA;&#x9;product.third_party_type,--V17 added for new sub_groups&#xD;&#xA;&#x9;product.gift_product,--V17&#xD;&#xA;    case -- V8 add product payment type, either paid in full or by installments&#xD;&#xA;       when product.id is null then null&#xD;&#xA;       when product.subscription_installment_term = 0 then 'PIF' &#xD;&#xA;      else 'INSTALLMENT' &#xD;&#xA;    end as product_payment_type&#xD;&#xA;  from&#xD;&#xA;     (select &#xD;&#xA;         f.account_domain, f.account_hist_id, f.account_id, f.payer_id, f.product_id, f.product_phase, f.product_opt_out, &#xD;&#xA;         f.activity_id, f.activity_date, f.activity_day, f.activity_year_month, f.activity_price, &#xD;&#xA;         f.account_item_status, f.account_item_discount, f.next_billing_date, &#xD;&#xA;         f.termination_date, f.trx_history_id, f.trx_date, f.trx_reason, f.trx_processor, f.trx_updater,&#xD;&#xA;         f.trx_result, f.trx_error_code, f.trx_amount, f.trx_payment_type, f.trx_voided,&#xD;&#xA;         f.trx_voided_date, f.trx_settled_date,  f.trx_cc_type, f.conversion_activity_date, f.conversion_activity_id, &#xD;&#xA;         f.is_deleted, f.src_last_updated_ts,&#xD;&#xA;         null::int as delta_hist_account_type,&#xD;&#xA;         'delta' as provenance&#xD;&#xA;     from&#xD;&#xA;         &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_account_activity f &#xD;&#xA;     union all   -- V10 OK since a SQL statement above removes overlap rows between intmd_account_activity and intmd_f_sub_billing_activity&#xD;&#xA;                 -- adding the provenance field removes any chance of two rows being equal anyway&#xD;&#xA;     select  -- V10 get full account histories for all payers found in the delta rows&#xD;&#xA;        f.account_domain, f.account_hist_id, f.account_id, f.payer_id, f.product_id, f.product_phase, f.product_opt_out, &#xD;&#xA;        f.activity_id, f.activity_date, f.activity_day, f.activity_year_month, f.activity_price, &#xD;&#xA;        f.account_item_status, f.account_item_discount, f.activity_next_billing_date as next_billing_date, &#xD;&#xA;        f.termination_date, f.trx_history_id, f.trx_date, f.trx_reason, f.trx_processor, f.trx_updater,&#xD;&#xA;        f.trx_result, f.trx_error_code, f.trx_amount, f.trx_payment_type, f.trx_voided,&#xD;&#xA;        f.trx_voided_date, f.trx_settled_date,  f.trx_cc_type, f.conversion_activity_date, f.conversion_activity_id, &#xD;&#xA;        f.is_deleted, f.src_last_updated_ts,&#xD;&#xA;        f.account_type as delta_hist_account_type,&#xD;&#xA;        'hist' as provenance       &#xD;&#xA;     from&#xD;&#xA;        &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_f_sub_billing_activity f&#xD;&#xA;     inner join  -- V10 payerid/account id must exist in the latest delta data&#xD;&#xA;       (select &#xD;&#xA;           payer_id, account_domain &#xD;&#xA;        from &#xD;&#xA;           &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_account_activity  -- V10 testing from DEV &#xD;&#xA;        group by 1, 2&#xD;&#xA;        ) d&#xD;&#xA;      on&#xD;&#xA;         d.payer_id = f.payer_id and &#xD;&#xA;         d.account_domain = f.account_domain&#xD;&#xA;     ) delta_and_hist        &#xD;&#xA;  left outer join&#xD;&#xA;     (select &#xD;&#xA;         id,&#xD;&#xA;         account_domain as account_account_domain,&#xD;&#xA;         payer_id,&#xD;&#xA;         account_type,&#xD;&#xA;         account_created_date,&#xD;&#xA;         account_next_billing_date&#xD;&#xA;      from&#xD;&#xA;        (select   -- list of distinct payer_ids, account_types and created dates from the accounts staging tables&#xD;&#xA;            stg_account.id,&#xD;&#xA;            stg_account.payer_id,&#xD;&#xA;            stg_account.account_type,&#xD;&#xA;            stg_account.date_created::date as account_created_date, -- V9 casting to date&#xD;&#xA;            stg_account.next_billing_date as account_next_billing_date,&#xD;&#xA;            stg_account.account_domain,&#xD;&#xA;            row_number() over (partition by stg_account.id, stg_account.account_domain order by stg_account.date_created desc) as rn  -- V7 some account ids reused across domains!&#xD;&#xA;         from&#xD;&#xA;           (select &#xD;&#xA;               id, payer_id, account_type, date_created, next_billing_date, '.com' as account_domain &#xD;&#xA;            from &#xD;&#xA;               &quot;+globalMap.get(&quot;stg&quot;)+&quot;.stg_accounts&#xD;&#xA;            where &#xD;&#xA;               owner_id >= 30000 and account_type != 6  -- remove test accounts&#xD;&#xA;            union&#xD;&#xA;            select &#xD;&#xA;               id, payer_id, account_type, date_created, next_billing_date, '.cn' as account_domain &#xD;&#xA;            from &#xD;&#xA;               &quot;+globalMap.get(&quot;stg&quot;)+&quot;.stg_accounts_cn&#xD;&#xA;            where &#xD;&#xA;               owner_id >= 30000 and account_type != 6  -- remove test accounts&#xD;&#xA;            union&#xD;&#xA;            select &#xD;&#xA;               id, payer_id, account_type, date_created, next_billing_date,'.tw' as account_domain &#xD;&#xA;            from &#xD;&#xA;               &quot;+globalMap.get(&quot;stg&quot;)+&quot;.stg_accounts_tw&#xD;&#xA;            where &#xD;&#xA;               owner_id >= 30000 and account_type != 6  -- remove test accounts&#xD;&#xA;            ) stg_account&#xD;&#xA;         )&#xD;&#xA;         where rn = 1&#xD;&#xA;      )account&#xD;&#xA;  on&#xD;&#xA;     account.id = delta_and_hist.account_id and &#xD;&#xA;     account.account_account_domain = delta_and_hist.account_domain&#xD;&#xA;  left outer join &#xD;&#xA;    (select *, product_id as id, product_name as name, product_dscr as description from &quot;+globalMap.get(&quot;stg&quot;)+&quot;.stg_product_api where id > 0) product --V17 changes to api-updated table&#xD;&#xA;  on&#xD;&#xA;     product.id = delta_and_hist.product_id&#xD;&#xA;)act&#xD;&#xA;left outer join  -- 53,987,399 join the stg_activity. WARNING: we need a scheduled job to get the latest data from MySQL to this table in &quot;+globalMap.get(&quot;stg&quot;)+&quot;&#xD;&#xA;   (select activity_id, max(activity_code) as activity_code, max(activity_description) as activity_desc from &quot;+globalMap.get(&quot;stg&quot;)+&quot;.stg_activity group by activity_id)  at&#xD;&#xA;on&#xD;&#xA;  at.activity_id = act.activity_id&#xD;&#xA;left outer join  -- 53,987,399 join to stg_subs_source_channel to grab acquisition channel; about half without a match&#xD;&#xA;  (select -- some duplicates are introduced with the tag1 column, also some family ids have multiple sources or channels&#xD;&#xA;    familyid, max(channel) as channel, max(source) as source&#xD;&#xA;  from &#xD;&#xA;    &quot;+globalMap.get(&quot;stg&quot;)+&quot;.stg_subs_source_channel&#xD;&#xA;  group by&#xD;&#xA;    familyid  &#xD;&#xA;  )ch&#xD;&#xA;on&#xD;&#xA;  ch.familyid = act.payer_id &#xD;&#xA;  -- V8 remove filter, this data comes from page tracker but we NEED an account domain key in stg_subs_source_channel&#xD;&#xA;  -- and act.account_domain = '.com' -- V7 we do not have a multi-domain source for this yet&#xD;&#xA;left outer join -- V6 added join to stg_subs_device info for subs devices to get the acquisition user agent string for subscribers&#xD;&#xA;   (select familyid, max(tag1) as user_agent from &quot;+globalMap.get(&quot;stg&quot;)+&quot;.stg_subs_device_info group by familyid) di&#xD;&#xA;on&#xD;&#xA;  di.familyid = act.payer_id &#xD;&#xA;  -- V8 remove filter, this data comes from page tracker but we NEED an account domain key in stg_subs_device_info&#xD;&#xA;  -- and act.account_domain = '.com' -- V7 we do not have a multi-domain source for this yet&#xD;&#xA;where -- filter unwanted activities&#xD;&#xA;  act.activity_id is not null and&#xD;&#xA;  act.activity_id not in (1040, 4000, 4010)  -- V8 added 4010; remove account item gifted and profile created activities (lots of rows we don't care about for now) &#xD;&#xA;&#xD;&#xA;) -- delta_hist_rows&#xD;&#xA;,sub_query_rows as&#xD;&#xA;(select  -- data subset used for sub-queries (first subscriptions, first activiations, same day upgrades...)&#xD;&#xA;  payer_id,&#xD;&#xA;  account_hist_id, -- V3&#xD;&#xA;  account_domain,&#xD;&#xA;  activity_date,&#xD;&#xA;  activity_day,&#xD;&#xA;  product_payment_type,&#xD;&#xA;  activity_id, -- V13 added&#xD;&#xA;  product_id,&#xD;&#xA;  renewal_term, &#xD;&#xA;  renewal_period,&#xD;&#xA;  case when is_subscription_event + is_incentivized_subscription > 0 then 1 else 0 end as is_all_subscription_event, &#xD;&#xA;  is_activation_event,&#xD;&#xA;  is_reactivation_event, -- V13 added&#xD;&#xA;  is_upgrade_event, -- V8 use is_upgrade_event, yields much closer numbers for retention&#xD;&#xA;  is_subscription -- V16 added for same-day upgrade sub-query&#xD;&#xA;  -- V15 remove installment_success_code computation (handled by the 'is_active' flag) &#xD;&#xA;from &#xD;&#xA;   delta_hist_rows &#xD;&#xA;) -- sub_query_rows&#xD;&#xA;select &#xD;&#xA;  stg.account_hist_id,&#xD;&#xA;  stg.account_domain,&#xD;&#xA;  stg.payer_id,&#xD;&#xA;  stg.account_id, -- V10 added&#xD;&#xA;  stg.account_type,&#xD;&#xA;  stg.account_created_date,&#xD;&#xA;  stg.account_next_billing_date,&#xD;&#xA;  stg.next_billing_date,&#xD;&#xA;  stg.account_item_status,&#xD;&#xA;  stg.account_item_discount,&#xD;&#xA;  stg.product_id,&#xD;&#xA;  stg.product_name,&#xD;&#xA;  stg.product_phase,&#xD;&#xA;  stg.product_opt_out,&#xD;&#xA;  stg.trial_term,&#xD;&#xA;  stg.trial_period,&#xD;&#xA;  stg.renewal_term,&#xD;&#xA;  stg.renewal_period,&#xD;&#xA;  --stg.gift_product,--V17&#xD;&#xA; -- stg.third_party_type,--V17&#xD;&#xA;  stg.product_payment_type,&#xD;&#xA;  stg.activity_id,&#xD;&#xA;  stg.activity_code,&#xD;&#xA;  stg.activity_desc,&#xD;&#xA;  stg.activity_date,&#xD;&#xA;  stg.activity_day,&#xD;&#xA;  stg.activity_year_month,&#xD;&#xA;  stg.activity_price,&#xD;&#xA;  stg.acquisition_channel,&#xD;&#xA;  stg.acquisition_source,&#xD;&#xA;  stg.acquisition_user_agent,&#xD;&#xA;  stg.termination_date,&#xD;&#xA;  stg.trx_date,&#xD;&#xA;  stg.trx_reason,&#xD;&#xA;  stg.trx_processor,&#xD;&#xA;  stg.trx_updater,&#xD;&#xA;  stg.trx_result,&#xD;&#xA;  stg.trx_error_code,&#xD;&#xA;  stg.trx_amount,&#xD;&#xA;  stg.trx_payment_type,&#xD;&#xA;  stg.trx_history_id,&#xD;&#xA;  stg.trx_cc_type,&#xD;&#xA;  stg.trx_voided,&#xD;&#xA;  stg.trx_voided_date,&#xD;&#xA;  stg.trx_settled_date,&#xD;&#xA;  stg.conversion_activity_date,&#xD;&#xA;  stg.conversion_activity_id,&#xD;&#xA;  stg.is_subscription_event,&#xD;&#xA;  stg.is_activation_event,&#xD;&#xA;  stg.is_reactivation_event,&#xD;&#xA;  stg.is_upgrade_event,&#xD;&#xA;  stg.is_assessment_event,&#xD;&#xA;  stg.is_deactivation_event,&#xD;&#xA;  stg.is_termination_event,&#xD;&#xA;  stg.is_paying_event,&#xD;&#xA;  stg.is_in_active_trial,&#xD;&#xA;  stg.is_subscription,&#xD;&#xA;  stg.is_third_party_subscription,&#xD;&#xA;  stg.is_incentivized_subscription,&#xD;&#xA;  stg.is_activation,&#xD;&#xA;  stg.is_third_party_activation,&#xD;&#xA;  stg.is_third_party_renewal,&#xD;&#xA;  stg.is_reactivation,&#xD;&#xA;  stg.is_third_party_reactivation,&#xD;&#xA;  stg.is_upgrade,&#xD;&#xA;  stg.is_assessment,&#xD;&#xA;  stg.is_optout_cancellation,&#xD;&#xA;  stg.is_renewal_success,&#xD;&#xA;  stg.is_renewal_retry_success,&#xD;&#xA;  stg.is_installment_success,    -- V9 added&#xD;&#xA;  stg.is_installment_retry_success,   -- V9 added&#xD;&#xA;  stg.is_renewal_special_retry_success,&#xD;&#xA;  stg.is_renewal_decline,&#xD;&#xA;  stg.is_renewal_retry_decline,&#xD;&#xA;  stg.is_renewal_special_retry_decline, -- V9 added&#xD;&#xA;  stg.is_no_auto_renewal_deactivation,&#xD;&#xA;  stg.is_cancellation_deactivation,&#xD;&#xA;  stg.is_renewal_decline_deactivation,&#xD;&#xA;  stg.is_third_party_deactivation,&#xD;&#xA;  stg.is_subscription_retry_failure,&#xD;&#xA;  stg.is_refund,&#xD;&#xA;  stg.is_refund_deactivation,&#xD;&#xA;  stg.is_renewal_voided,&#xD;&#xA;  stg.is_installment_voided,   -- V9 added&#xD;&#xA;  stg.is_deleted,&#xD;&#xA;  stg.src_last_updated_ts,  &#xD;&#xA;  stg.is_unknown_account,&#xD;&#xA;  stg.subscription_group,&#xD;&#xA;  stg.old_subscription_group,&#xD;&#xA;  stg.subscription_metric_group_name,&#xD;&#xA;  stg.billing_metric_group_name,&#xD;&#xA;  -- V10 simpler logic, is_paid is true in between activation and deactivation periods, false between deactivations and reactivation periods&#xD;&#xA;  coalesce(case &#xD;&#xA;             when stg.is_active is null then&#xD;&#xA;                last_value(stg.is_active) ignore nulls over (partition by stg.payer_id, stg.account_domain order by stg.activity_date, stg.account_hist_id /*rows unbounded preceding*/)&#xD;&#xA;             else stg.is_active&#xD;&#xA;           end, 0) as is_paid,             &#xD;&#xA;  stg.renewal_day_forwarded as next_renewal_or_termination_forward_day,&#xD;&#xA;  to_timestamp_ntz(CURRENT_TIMESTAMP()) as created_ts,  &#xD;&#xA;  'jb_stg2intmd_f_sub_billing_activity' as created_by &#xD;&#xA;from &#xD;&#xA;(select  -- stg&#xD;&#xA;   driver.*,&#xD;&#xA;   case &#xD;&#xA;      when driver.expected_renewal_day is null then &#xD;&#xA;         last_value(driver.expected_renewal_day) ignore nulls over (partition by driver.payer_id, driver.account_domain order by driver.activity_date, driver.account_hist_id /*rows unbounded preceding*/)&#xD;&#xA;      else driver.expected_renewal_day&#xD;&#xA;   end as renewal_day_forwarded,&#xD;&#xA;    case   -- V10 simpler logic, is_paid is true in between activation and deactivation periods, false between deactivations and reactivation periods&#xD;&#xA;       when driver.activity_date >= driver.activation_date and -- V10 this indicates this entry is on or post activation date &#xD;&#xA;            (driver.subscription_metric_group_name like '%~ACT~%' or  &#xD;&#xA;             driver.subscription_metric_group_name like '%~UPG~%' or &#xD;&#xA;             driver.subscription_metric_group_name like '%~REACT~%' or  &#xD;&#xA;             driver.billing_metric_group_name in ('~RNWOK~','~RROK~','~SROK~')  or &#xD;&#xA;             driver.billing_metric_group_name in ('~INSTALOK~', '~IROK~'))  -- V15 added installment success&#xD;&#xA;            then 1 -- activation, reactivation, upgrade, renewals or installments success &#xD;&#xA;       when driver.billing_metric_group_name like '%DEACT~%' or driver.billing_metric_group_name like '%~APPLYGIFT~%' then 0 -- deactivation or applying a gift code to account&#xD;&#xA;       else null&#xD;&#xA;    end as is_active&#xD;&#xA; from&#xD;&#xA;(select  -- driver sub-query  &#xD;&#xA;    delta_hist_rows.*,&#xD;&#xA;    -- rules for subscription groups&#xD;&#xA;&#x9;-- old rules&#xD;&#xA;    case &#xD;&#xA;      when subscriptions.account_hist_id = delta_hist_rows.account_hist_id or -- V6 use account_hist_id to match on the subscription row &#xD;&#xA;          (subscriptions.account_hist_id is null and activations.account_hist_id = delta_hist_rows.account_hist_id) or  -- V8 catch missing subscriptions &#xD;&#xA;          (subscriptions.account_hist_id is not null and activations.account_hist_id = delta_hist_rows.account_hist_id and subscriptions.activity_date > activations.activity_date)  -- V8 catch subscriptions that are post-activations (very few cases) &#xD;&#xA;      then  &#xD;&#xA;        case &#xD;&#xA;          when delta_hist_rows.product_id in (368,396,398,414,416,424,426,428,436,438,440,442,444,446,450,452,454,462,464,466,470,472,474,510,512,540,550) then  -- V3 added 550 product (gift, no trial), V6 added 540 China iTunes monthly&#xD;&#xA;            case &#xD;&#xA;               when delta_hist_rows.trial_term &lt;> 0 and delta_hist_rows.acquisition_channel &lt;> 'Incentivized'  then 'FRS iTunes'  &#xD;&#xA;               -- V8 break down iTunes into annual and monthly&#xD;&#xA;               when (delta_hist_rows.renewal_term = 5 and delta_hist_rows.renewal_period in (1, 2)) or (delta_hist_rows.renewal_term = 3 and delta_hist_rows.renewal_period = 18) then 'Direct iTunes Annual'&#xD;&#xA;               when (delta_hist_rows.renewal_term = 3 and delta_hist_rows.renewal_period in (1, 3, 4, 6)) or (delta_hist_rows.renewal_term = 4 and delta_hist_rows.renewal_period = 1) then 'Direct iTunes Monthly'&#xD;&#xA;               else 'Direct iTunes' &#xD;&#xA;            end &#xD;&#xA;          when delta_hist_rows.product_id in (7,54,94,120,138,148,150,448) and (same_day_upgrades.payer_id is null or same_day_upgrades.account_hist_id = coalesce(subscriptions.account_hist_id, 0)) then -- V3 not an upgrade if an incentivized subscription occurs in the same transaction, V16 make this an explicit check on subscription event&#xD;&#xA;       &#x9;     case &#xD;&#xA;       &#x9;&#x9;    when delta_hist_rows.trial_term &lt;> 0 and delta_hist_rows.acquisition_channel &lt;> 'Incentivized' then --'FRS Monthly'&#xD;&#xA;       &#x9;&#x9;       case &#xD;&#xA;       &#x9;&#x9;          when upgrades.payer_id is null then 'FRS Monthly, No Migrators'  -- V8 has an upgrade in history&#xD;&#xA;       &#x9;&#x9;          else 'FRS Monthly Migrators'&#xD;&#xA;       &#x9;&#x9;       end&#xD;&#xA;       &#x9;&#x9;    else 'Direct Monthly' &#xD;&#xA;       &#x9;     end &#xD;&#xA;          when delta_hist_rows.product_id in (40,44,250) then 'Direct Annual' -- V8 these products are always direct annual&#xD;&#xA;          when same_day_upgrades.payer_id is not null and same_day_upgrades.product_id in (96,104,144,190,244,246,280,282,286) and same_day_upgrades.account_hist_id != coalesce(subscriptions.account_hist_id, 0) then -- V3 add check for upgrade on the same transaction as the subscription (incentivized subs on a 1900), V16 make this an explicit check on subscription event &#xD;&#xA;             case -- activated as a yearly upgrade on the same day as the subscription&#xD;&#xA;                when delta_hist_rows.trial_term &lt;> 0 and delta_hist_rows.acquisition_channel &lt;> 'Incentivized'  then  -- V3 also check incentivized flag&#xD;&#xA;                   case &#xD;&#xA;                      when same_day_upgrades.product_payment_type = 'PIF' then 'FRS Annual PIF'&#xD;&#xA;                      when same_day_upgrades.product_payment_type = 'INSTALLMENT' then 'FRS Annual Install'&#xD;&#xA;                      else 'FRS Annual'  &#xD;&#xA;                   end&#xD;&#xA;                else 'Direct Annual' &#xD;&#xA;              end&#xD;&#xA;          when delta_hist_rows.trial_term &lt;> 0 and delta_hist_rows.acquisition_channel &lt;> 'Incentivized' then 'FRS Other'   -- V3 also check incentivized flag&#xD;&#xA;          else 'Direct Other'&#xD;&#xA;         end&#xD;&#xA;      else null&#xD;&#xA;&#x9;  end as old_subscription_group,&#xD;&#xA;&#x9;  --V17 new sub group rules&#xD;&#xA;&#x9;  --use old row matching&#xD;&#xA;&#x9;  case &#xD;&#xA;      when subscriptions.account_hist_id = delta_hist_rows.account_hist_id or -- V6 use account_hist_id to match on the subscription row &#xD;&#xA;          (subscriptions.account_hist_id is null and activations.account_hist_id = delta_hist_rows.account_hist_id) or  -- V8 catch missing subscriptions &#xD;&#xA;          (subscriptions.account_hist_id is not null and activations.account_hist_id = delta_hist_rows.account_hist_id and subscriptions.activity_date > activations.activity_date)&#xD;&#xA;&#x9;&#x9;  then&#xD;&#xA;&#x9;  case when delta_hist_rows.gift_product &lt;>0 --was a gift account&#xD;&#xA;&#x9;  then 'Gift'&#xD;&#xA;&#x9;  when delta_hist_rows.acquisition_channel = 'Incentivized' --Incentivized account&#xD;&#xA;&#x9;&#x9;&#x9;then case when (delta_hist_rows.renewal_term =3 and delta_hist_rows.renewal_period =1 and same_day_upgrades.payer_id is null)--Monthly&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;or(same_day_upgrades.renewal_term =3 and same_day_upgrades.renewal_period =1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then 'Incentivized Monthly'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;when (same_day_upgrades.payer_id = null and --OR calculated after AND&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(delta_hist_rows.renewal_term = 3 and delta_hist_rows.renewal_period =12 --12 months&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or delta_hist_rows.renewal_term = 4 and delta_hist_rows.renewal_period = 4 --4 quarters&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or delta_hist_rows.renewal_term = 5 and delta_hist_rows.renewal_period = 1 --1 year&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;))--exact payment term is 1 year, so Annual&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or (   same_day_upgrades.renewal_term = 3 and same_day_upgrades.renewal_period =12 --12 months&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or same_day_upgrades.renewal_term = 4 and same_day_upgrades.renewal_period = 4 --4 quarters&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or same_day_upgrades.renewal_term = 5 and same_day_upgrades.renewal_period = 1 --1 year&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)--exact payment term is 1 year, so Annual&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then 'Incentivized Annual'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else 'Incentivized Other'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;end&#xD;&#xA;&#x9;  else case&#xD;&#xA;&#x9;  when delta_hist_rows.trial_term &lt;> 0 --has a trial&#xD;&#xA;&#x9;&#x9;then 'FRS '&#xD;&#xA;&#x9;&#x9;else 'Direct '&#xD;&#xA;&#x9;&#x9;end&#xD;&#xA;&#x9;&#x9;||&#xD;&#xA;&#x9;&#x9;case when delta_hist_rows.third_party_type &lt;> 0 --iTunes&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  then case when delta_hist_rows.renewal_term =3 and delta_hist_rows.renewal_period =1 --Monthly check for iTunes&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  then 'iTunes Monthly'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else 'iTunes Annual'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   end&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  when delta_hist_rows.renewal_term =3 and delta_hist_rows.renewal_period =1 and same_day_upgrades.payer_id is null--Monthly &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then 'Monthly' ||--check for misc trial&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case when delta_hist_rows.trial_term =3 and delta_hist_rows.trial_period &lt;> 1 --different than 1 month&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then ' Misc Trial' else '' end ||&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case when upgrades.payer_id is null then ' No Migrators'  -- V8 has an upgrade in history&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else ' Migrators'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  end&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; when (   same_day_upgrades.renewal_term = 3 and same_day_upgrades.renewal_period =12 --12 months&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or same_day_upgrades.renewal_term = 4 and same_day_upgrades.renewal_period = 4 --4 quarters&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or same_day_upgrades.renewal_term = 5 and same_day_upgrades.renewal_period = 1 --1 year&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)--exact payment term is 1 year, so Annual&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then case &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when same_day_upgrades.product_payment_type = 'INSTALLMENT' then 'Annual Installs'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--when same_day_upgrades.product_payment_type = 'PIF' then 'Annual PIF'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    else 'Annual PIF'  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; end&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  when  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(   delta_hist_rows.renewal_term = 3 and delta_hist_rows.renewal_period =12 --12 months&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or delta_hist_rows.renewal_term = 4 and delta_hist_rows.renewal_period = 4 --4 quarters&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;or delta_hist_rows.renewal_term = 5 and delta_hist_rows.renewal_period = 1 --1 year&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)--exact payment term is 1 year and was not an upgrade, so Annual&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then case &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when delta_hist_rows.product_payment_type = 'INSTALLMENT' then 'Annual Installs'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--when delta_hist_rows.product_payment_type = 'PIF' then 'Annual PIF'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    else 'Annual PIF'  &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; end&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;  else 'Other ' ||--Other&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;   case when same_day_upgrades.payer_id is null then --get subscription renewal term/period&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;/*case when ( delta_hist_rows.renewal_term = 3 and delta_hist_rows.renewal_period =3 -- 3 months&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; or delta_hist_rows.renewal_term = 4 and delta_hist_rows.renewal_period =1)-- 1 quarter&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   then 'Other 3 Months'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; --Manually create a group from term/period&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else 'Other '|| delta_hist_rows.renewal_period ||' '|| &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(case when delta_hist_rows.renewal_term = 1 then 'Day'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when delta_hist_rows.renewal_term = 2 then 'Week'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when delta_hist_rows.renewal_term = 3 then 'Month'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when delta_hist_rows.renewal_term = 4 then 'Quarter'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when delta_hist_rows.renewal_term = 5 then 'Year'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when delta_hist_rows.renewal_term = 6 then 'Hour'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   else delta_hist_rows.renewal_term::varchar end) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|| case when delta_hist_rows.renewal_period >1 then 's' end &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end*/&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  case when (delta_hist_rows.renewal_term = 4 and delta_hist_rows.renewal_period =1) then '3 Months'-- 1 quarter&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; when (delta_hist_rows.renewal_term = 3 and delta_hist_rows.renewal_period =24) then '2 Years' --24 Months&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; --Manually create a group from term/period&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; when (delta_hist_rows.renewal_term in (3,5)) then delta_hist_rows.renewal_period ||' '|| &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(case &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when delta_hist_rows.renewal_term = 3 then 'Month'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when delta_hist_rows.renewal_term = 5 then 'Year'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   else delta_hist_rows.renewal_term::varchar end) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; || case when delta_hist_rows.renewal_period >1 then 's' end &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  when same_day_upgrades.payer_id is NOT null then --get same day upgrade renewal term/period&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case when (same_day_upgrades.renewal_term = 4 and same_day_upgrades.renewal_period =1) then '3 Months'-- 1 quarter&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; when (same_day_upgrades.renewal_term = 3 and same_day_upgrades.renewal_period =24) then '2 Years' --24 Months&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; --Manually create a group from term/period&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; when (same_day_upgrades.renewal_term in (3,5)) then same_day_upgrades.renewal_period ||' '|| &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(case &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when same_day_upgrades.renewal_term = 3 then 'Month'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when same_day_upgrades.renewal_term = 5 then 'Year'&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   else same_day_upgrades.renewal_term::varchar end) &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; || case when same_day_upgrades.renewal_period >1 then 's' end &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; end&#xD;&#xA;&#x9;&#x9;end&#xD;&#xA;&#x9;end&#xD;&#xA;&#x9;end&#xD;&#xA;     as subscription_group,&#xD;&#xA;    -- rules for subscription types; there is a one to many relationship between an activity and a subscription type &#xD;&#xA;    -- (i.e. activity 6020 can be both an upgrade and an activation)&#xD;&#xA;    -- subscription types end up in a comma separated list of types (i.e: '~SUB~,~ACT~' for both a subscription and an activation)&#xD;&#xA;    -- that will serve as the natural key to a bridge table&#xD;&#xA;    case &#xD;&#xA;      when delta_hist_rows.is_subscription_event = 1 and (subscriptions.activity_date &lt;= coalesce(activations.activity_date, '9999-01-01')) then -- V4 use subscription type codes, V8 tag the activation date as a subscription date when activation comes first&#xD;&#xA;        '~SUB~' || &#xD;&#xA;        case when delta_hist_rows.is_activation + delta_hist_rows.is_third_party_activation > 0 then ',~ACT~' else '' end ||&#xD;&#xA;        case when delta_hist_rows.is_upgrade_event = 1 then ',~UPG~' else '' end || -- V8 change back to is_upgrade_event&#xD;&#xA;        case when delta_hist_rows.is_reactivation_event = 1 then ',~REACT~' else '' end  -- V9 use event flag&#xD;&#xA;      when activations.account_hist_id = delta_hist_rows.account_hist_id then -- V6 use account_hist_id to match on the activation row, V9 add reactivations by installment success following a renewal failure, V15 remove V9&#xD;&#xA;        '~ACT~' || &#xD;&#xA;        case when subscriptions.account_hist_id is null or subscriptions.activity_date > activations.activity_date then ',~SUB~' else '' end ||   -- V10 look ahead; V8 when a subscription is missing, or first subscription date is past activation date&#xD;&#xA;        case when delta_hist_rows.is_upgrade_event = 1 then ',~UPG~' else '' end || -- V8 change back to is_upgrade_event&#xD;&#xA;        case when delta_hist_rows.is_reactivation_event = 1 then ',~REACT~' else '' end ||  -- V9 use event flag&#xD;&#xA;        case when delta_hist_rows.is_subscription_event + delta_hist_rows.is_incentivized_subscription > 0 then ',~SUB~' else '' end  -- V16 change is_subscription to is_subscription_event, remove third-party subs (included in sub event)&#xD;&#xA;      when delta_hist_rows.is_subscription_event + delta_hist_rows.is_incentivized_subscription > 0 then '~SUB~'  -- catch re-subscriptions that come after the initial subscription, V16 change is_subscription to is_subscription_event (no incentivized subs)&#xD;&#xA;      when activations.activity_date &lt;= delta_hist_rows.activity_date and delta_hist_rows.is_reactivation_event = 1 then -- V9 use event flag, V10 needs to have been activated to be reactivated &#xD;&#xA;         case  -- V16 check reactivations on a 1030&#xD;&#xA;            when delta_hist_rows.activity_id = 1030 and react_steps.react_cycle = react_steps.num_react_cycles and delta_hist_rows.account_type not in (1, 13, 17) then null -- V16 for non parent accounts, hold the last reactivation&#xD;&#xA;            else '~REACT~'&#xD;&#xA;         end&#xD;&#xA;      when delta_hist_rows.is_upgrade_event > 0 then '~UPG~'  -- V8 change back to is_upgrade_event&#xD;&#xA;      when delta_hist_rows.is_assessment > 0 then '~ASMT~'&#xD;&#xA;      else null&#xD;&#xA;    end as subscription_metric_group_name,&#xD;&#xA;    -- same as with subscription types, there is a one to many relationship, hence we build a comma separated list of values&#xD;&#xA;    -- that will serve as the natural key to a bridge table&#xD;&#xA;    case  -- V4 use sub type codes&#xD;&#xA;      when delta_hist_rows.activity_id in (2110) then '~APPLYGIFT~'  -- V9 gift code applied (not paying) &#xD;&#xA;      when delta_hist_rows.is_renewal_success > 0 then '~RNWOK~' &#xD;&#xA;      when delta_hist_rows.is_renewal_retry_success > 0 then '~RROK~' &#xD;&#xA;      when delta_hist_rows.is_installment_success > 0 then '~INSTALOK~' &#xD;&#xA;      when delta_hist_rows.is_installment_retry_success > 0 then '~IROK~' &#xD;&#xA;      when delta_hist_rows.is_renewal_special_retry_success > 0 then '~SROK~' &#xD;&#xA;      when delta_hist_rows.is_renewal_decline > 0 then '~RNWFAIL~' &#xD;&#xA;      when delta_hist_rows.is_renewal_retry_decline > 0 then '~RRFAIL~' &#xD;&#xA;      when delta_hist_rows.is_renewal_special_retry_decline > 0 then '~SRFAIL~'      -- V9 added special retry failure deactivation&#xD;&#xA;      -- V13 moved refund related deactivations with the rest of them below&#xD;&#xA;      -- V10 moved all deactivations to the end with a preliminary check on prior subscription &#xD;&#xA;      when subscriptions.account_hist_id is not null or activations.account_hist_id is not null then -- V14 added check on activation as some incentivized subs do not show up in subscriptions (no convertion date)&#xD;&#xA;         case&#xD;&#xA;            when delta_hist_rows.is_optout_cancellation > 0 then '~OUCNL~'  &#xD;&#xA;            when delta_hist_rows.activity_id in (2120) then '~MISCDEACT~'  -- V9 misc.deactivation&#xD;&#xA;            when delta_hist_rows.activity_id in (1300) and react_steps.react_cycle_cur_step = react_steps.react_cycle_num_steps then '~MISCDEACT~'  -- V14 added deactivation when the history ends with a type change&#xD;&#xA;            when delta_hist_rows.is_no_auto_renewal_deactivation > 0 then '~NOARNWDEACT~'  -- V8 added no auto renewal deactivation&#xD;&#xA;            when delta_hist_rows.is_cancellation_deactivation > 0 then &#xD;&#xA;               case &#xD;&#xA;                  when activations.activity_date is not null and activations.activity_date &lt;= delta_hist_rows.activity_date then '~CDEACT~,~PCDEACT~' &#xD;&#xA;                  else '~CDEACT~'&#xD;&#xA;                end &#xD;&#xA;            when delta_hist_rows.is_renewal_decline_deactivation > 0 then &#xD;&#xA;               case&#xD;&#xA;                  when activations.activity_date is not null and activations.activity_date &lt;= delta_hist_rows.activity_date then '~RDDEACT~,~PRDDEACT~' &#xD;&#xA;                 else '~RDDEACT~'&#xD;&#xA;               end&#xD;&#xA;            when delta_hist_rows.is_third_party_deactivation > 0 then &#xD;&#xA;               case&#xD;&#xA;                  when activations.activity_date is not null and activations.activity_date &lt;= delta_hist_rows.activity_date then '~TPDEACT~,~PTPDEACT~' &#xD;&#xA;                  else '~TPDEACT~'&#xD;&#xA;               end &#xD;&#xA;            when delta_hist_rows.is_refund_deactivation + delta_hist_rows.is_renewal_voided + delta_hist_rows.is_installment_voided > 0 then -- V13 move refund related reactivations &#xD;&#xA;               '~RFND~' || &#xD;&#xA;               case &#xD;&#xA;                  when delta_hist_rows.is_refund_deactivation > 0 then  &#xD;&#xA;                     case   -- V13 ignore is_refund flag; there are many voided 3000 activities that show up in DW1 as 'Refunded' churn...&#xD;&#xA;                        when activations.activity_date is not null and activations.activity_date &lt;= delta_hist_rows.activity_date then &#xD;&#xA;                           case -- V13 deactivate on a 3000 only if this is the last activity in the (re-)activation cycle&#xD;&#xA;                              when delta_hist_rows.activity_id = 3000 and react_steps.react_cycle_cur_step = react_steps.react_cycle_num_steps then ',~FRFND~,~RDEACT~,~PRDEACT~'&#xD;&#xA;                              when delta_hist_rows.activity_id != 3000 then ',~RDEACT~,~PRDEACT~'  -- V13 ignore activity 3000 if not at the end of the reactivation cycle&#xD;&#xA;                           end&#xD;&#xA;                        else ',~RDEACT~' &#xD;&#xA;                     end&#xD;&#xA;                  else ''&#xD;&#xA;               end ||&#xD;&#xA;               case &#xD;&#xA;                  when delta_hist_rows.is_renewal_voided > 0 then ',~RNWVOIDED~'&#xD;&#xA;                  when delta_hist_rows.is_installment_voided > 0 then ',~INSTALVOIDED~'  -- V9 added&#xD;&#xA;                  else '' &#xD;&#xA;              end &#xD;&#xA;         end&#xD;&#xA;      else null&#xD;&#xA;    end as billing_metric_group_name,&#xD;&#xA;    -- V8 add expected_renewal_day to compute the is_paid flag&#xD;&#xA;    case &#xD;&#xA;        -- V9 reshuffle to use the same condition for renewals and non-renewals&#xD;&#xA;        when activations.account_hist_id is not null and  -- must be an activated account to set a renewal date&#xD;&#xA;             delta_hist_rows.activity_date >= activations.activity_date  -- V10 account is activated but make sure it is activated on or before this entry (occurs when reprocessing historical rows)&#xD;&#xA;              then&#xD;&#xA;              case &#xD;&#xA;                 when -- V9 activation or renewal activity, changing plans or getting a renewal date pushed back&#xD;&#xA;                    delta_hist_rows.activity_id in (6000, 6010, 1200, 1600, 1610) or  -- V10 added 1200 (renewal date push back); V14 added 1600/1610 account_paused/unpaused&#xD;&#xA;                    ((delta_hist_rows.is_subscription_event + delta_hist_rows.is_activation_event + delta_hist_rows.is_reactivation_event + delta_hist_rows.is_upgrade_event + &#xD;&#xA;                      delta_hist_rows.is_renewal_success + delta_hist_rows.is_renewal_retry_success + delta_hist_rows.is_renewal_special_retry_success > 0)) then -- V9 don't update the renewal date on installment ok unless it comes after a renewal voided &#xD;&#xA;                    case &#xD;&#xA;                       when coalesce(delta_hist_rows.product_id, 0) = 0 then -- V10 unknown product_id comes out as zero&#xD;&#xA;                          case &#xD;&#xA;                             when delta_hist_rows.is_reactivation_event = 1 then dateadd('year', 1, delta_hist_rows.activity_day)  -- V9 probably a yearly gift, won't be available until the next renewal or no-auto renewal line, could also be a two year gift but there is no way to know at this point&#xD;&#xA;                             when delta_hist_rows.activity_id in (1200, 1600, 1610) and delta_hist_rows.account_type in (1, 13, 17) then dateadd('year'/*century*/, 100, delta_hist_rows.activity_day)  -- V10 get a year push back on the next renewal date; V14 changed that to a 100 years (open ended), added 1600, 1610, V16 limit the behavior to parent accounts&#xD;&#xA;                             else delta_hist_rows.activity_day -- can't go any further without a product (activity ids:  6030, 8000, ...)&#xD;&#xA;                          end&#xD;&#xA;                       -- V14 may need to hold off on the following&#xD;&#xA;                       -- V15 may need to add a month to same-day product upgrades (monthly and yearly) from a free trial product&#xD;&#xA;                       when delta_hist_rows.activity_id in (6000, 6010) and delta_hist_rows.account_type in (1, 13, 17) then dateadd('year'/*century*/, 100, delta_hist_rows.activity_day)  -- V14 make the change plan activties open ended, V16 limit the behavior to parent accounts&#xD;&#xA;                       when delta_hist_rows.renewal_term = 1 then dateadd('day', delta_hist_rows.renewal_period, delta_hist_rows.activity_day)  &#xD;&#xA;                       when delta_hist_rows.renewal_term = 2 then dateadd('week', delta_hist_rows.renewal_period, delta_hist_rows.activity_day) &#xD;&#xA;                       when delta_hist_rows.renewal_term = 3 then dateadd('month', delta_hist_rows.renewal_period, delta_hist_rows.activity_day)  &#xD;&#xA;                       when delta_hist_rows.renewal_term = 4 then dateadd('quarter', delta_hist_rows.renewal_period, delta_hist_rows.activity_day)&#xD;&#xA;                       when delta_hist_rows.renewal_term = 5 then dateadd('year', delta_hist_rows.renewal_period, &#xD;&#xA;                                                                    case -- V9 move activity day up one month for same day upgrades&#xD;&#xA;                                                                       when delta_hist_rows.account_hist_id = same_day_upgrades.account_hist_id then dateadd('month', 1, delta_hist_rows.activity_day)&#xD;&#xA;                                                                       else delta_hist_rows.activity_day&#xD;&#xA;                                                                    end) &#xD;&#xA;                       when delta_hist_rows.renewal_term = 6 then dateadd('hour', delta_hist_rows.renewal_period, delta_hist_rows.activity_day) &#xD;&#xA;                       else dateadd('month', 1, delta_hist_rows.activity_day) -- will default to 1 month renewal period if an unknown renewal term comes in&#xD;&#xA;                    end&#xD;&#xA;                  -- V9 termination or deactivation events; V10 change to deactivation conditions only&#xD;&#xA;                  when delta_hist_rows.activity_id in (2120) or (delta_hist_rows.is_refund_deactivation + delta_hist_rows.is_no_auto_renewal_deactivation + delta_hist_rows.is_cancellation_deactivation + delta_hist_rows.is_renewal_decline_deactivation + delta_hist_rows.is_third_party_deactivation) > 0 then delta_hist_rows.activity_day&#xD;&#xA;                  else null&#xD;&#xA;              end &#xD;&#xA;        else null&#xD;&#xA;    end as expected_renewal_day,&#xD;&#xA;    coalesce(activations.activity_date, '9999-12-31 00:00:00') as activation_date -- V10 add activation date for the is_active flag&#xD;&#xA;  from&#xD;&#xA;    delta_hist_rows&#xD;&#xA;  -- below, we query historical rows to find the first subscription or activation transactions&#xD;&#xA;  -- or upgrades that occur on the same day as an activition&#xD;&#xA;  left outer join -- earliest subscription event per payer id (either an un-incentivized 1000, 1060 or an incentived subscription trigger by a conversion date)&#xD;&#xA;    (select * from  &#xD;&#xA;      (select *,&#xD;&#xA;          row_number() over (partition by payer_id, account_domain order by activity_date, account_hist_id) as rn  -- V8 partition by both payer and domain&#xD;&#xA;      from&#xD;&#xA;        sub_query_rows&#xD;&#xA;      where&#xD;&#xA;        is_all_subscription_event = 1 &#xD;&#xA;      )&#xD;&#xA;    where rn = 1&#xD;&#xA;     )subscriptions&#xD;&#xA;  on&#xD;&#xA;    subscriptions.payer_id = delta_hist_rows.payer_id and&#xD;&#xA;    subscriptions.account_domain = delta_hist_rows.account_domain&#xD;&#xA;  left outer join -- V16 earliest subscription transaction for payer id activity 1000 and product phase > 0; this is to catch same day upgrades&#xD;&#xA;    (select * from  &#xD;&#xA;      (select *,&#xD;&#xA;          row_number() over (partition by payer_id, account_domain order by activity_date, account_hist_id) as rn  -- V8 partition by both payer and domain&#xD;&#xA;      from&#xD;&#xA;        sub_query_rows&#xD;&#xA;      where&#xD;&#xA;        is_subscription = 1 &#xD;&#xA;      )&#xD;&#xA;    where rn = 1&#xD;&#xA;    )subscription_for_upgrades&#xD;&#xA;  on&#xD;&#xA;    subscription_for_upgrades.payer_id = delta_hist_rows.payer_id and&#xD;&#xA;    subscription_for_upgrades.account_domain = delta_hist_rows.account_domain&#xD;&#xA;  left outer join -- earliest activation transaction per payer id&#xD;&#xA;    (select * from  &#xD;&#xA;      (select *,&#xD;&#xA;          row_number() over (partition by payer_id, account_domain order by activity_date, account_hist_id) as rn  -- V8 partition by both payer and domain&#xD;&#xA;      from&#xD;&#xA;        sub_query_rows&#xD;&#xA;      where&#xD;&#xA;        is_activation_event = 1  -- V6 changed to activation_event &#xD;&#xA;      )&#xD;&#xA;    where rn = 1 &#xD;&#xA;    )activations&#xD;&#xA;  on&#xD;&#xA;    activations.payer_id = delta_hist_rows.payer_id and&#xD;&#xA;    activations.account_domain = delta_hist_rows.account_domain&#xD;&#xA;  left outer join  -- for upgrades occurring the same day as a subscription&#xD;&#xA;    (select * from  &#xD;&#xA;      (select *,&#xD;&#xA;          row_number() over (partition by payer_id, account_domain order by activity_date, account_hist_id) as rn  -- V8 partition by both payer and domain&#xD;&#xA;      from&#xD;&#xA;        sub_query_rows&#xD;&#xA;      where&#xD;&#xA;        is_upgrade_event = 1&#xD;&#xA;      )&#xD;&#xA;    where rn = 1&#xD;&#xA;    )same_day_upgrades&#xD;&#xA;  on&#xD;&#xA;    same_day_upgrades.payer_id = delta_hist_rows.payer_id and&#xD;&#xA;    same_day_upgrades.account_domain = delta_hist_rows.account_domain and&#xD;&#xA;    same_day_upgrades.activity_day = subscription_for_upgrades.activity_day  -- V16 use the subscription_for_upgrades sub query&#xD;&#xA;  left outer join  -- for first upgrades &#xD;&#xA;    (select * from  &#xD;&#xA;      (select *,&#xD;&#xA;          row_number() over (partition by payer_id, account_domain order by activity_date, account_hist_id) as rn  -- V8 partition by both payer and domain&#xD;&#xA;      from&#xD;&#xA;        sub_query_rows&#xD;&#xA;      where&#xD;&#xA;        is_upgrade_event = 1&#xD;&#xA;      )&#xD;&#xA;    where rn = 1&#xD;&#xA;    )upgrades&#xD;&#xA;  on&#xD;&#xA;    upgrades.payer_id = delta_hist_rows.payer_id and&#xD;&#xA;    upgrades.account_domain = delta_hist_rows.account_domain &#xD;&#xA;  left outer join  -- V13 number steps between re-activation cycles, to handle full refunds (activity 3000 in account history) properly&#xD;&#xA;  (select &#xD;&#xA;      payer_id, &#xD;&#xA;      account_domain,&#xD;&#xA;      account_hist_id,&#xD;&#xA;      row_number() over (partition by payer_id, account_domain, react_cycle order by activity_day, case when activity_id = 3000 then 1 else 0 end, account_hist_id) as react_cycle_cur_step,&#xD;&#xA;      count(1) over (partition by payer_id, account_domain, react_cycle) as react_cycle_num_steps,  &#xD;&#xA;      react_cycle,&#xD;&#xA;      max(react_cycle) over (partition by payer_id, account_domain) as num_react_cycles&#xD;&#xA;   from&#xD;&#xA;      (select &#xD;&#xA;         f.payer_id, &#xD;&#xA;         f.account_domain,&#xD;&#xA;         f.account_hist_id,&#xD;&#xA;         f.activity_day,&#xD;&#xA;         f.activity_id,&#xD;&#xA;         coalesce(case &#xD;&#xA;                     when react.num_reactivations is null then &#xD;&#xA;                        last_value(react.num_reactivations) ignore nulls over (partition by f.payer_id, f.account_domain order by f.activity_date, f.account_hist_id /*rows unbounded preceding*/)&#xD;&#xA;                     else react.num_reactivations&#xD;&#xA;                  end, 0) + 1 as react_cycle&#xD;&#xA;      from&#xD;&#xA;         sub_query_rows f&#xD;&#xA;      left outer join&#xD;&#xA;         (select &#xD;&#xA;            payer_id, account_domain, account_hist_id,&#xD;&#xA;            row_number() over (partition by payer_id, account_domain order by activity_date, account_hist_id) as num_reactivations&#xD;&#xA;         from&#xD;&#xA;            sub_query_rows &#xD;&#xA;         where&#xD;&#xA;            is_reactivation_event = 1&#xD;&#xA;         )react&#xD;&#xA;      on&#xD;&#xA;         react.payer_id = f.payer_id and &#xD;&#xA;         react.account_domain = f.account_domain and&#xD;&#xA;         react.account_hist_id = f.account_hist_id&#xD;&#xA;      )&#xD;&#xA;  )react_steps&#xD;&#xA;  on&#xD;&#xA;     react_steps.payer_id = delta_hist_rows.payer_id and&#xD;&#xA;     react_steps.account_domain = delta_hist_rows.account_domain and&#xD;&#xA;     react_steps.account_hist_id = delta_hist_rows.account_hist_id&#xD;&#xA;)driver&#xD;&#xA;)stg&#xD;&#xA;order by  -- V5 order by the SORTKEY for inserts&#xD;&#xA;   activity_date, account_hist_id, account_domain, payer_id&#xD;&#xA;;&#xD;&#xA;&quot;"/>
    <elementParameter field="CHECK" name="DIE_ON_ERROR" value="true"/>
    <elementParameter field="LABEL" name="NOTE" value="This option only applies when deploying and running in the Talend Runtime"/>
    <elementParameter field="CHECK" name="SPECIFY_DATASOURCE_ALIAS" value="false"/>
    <elementParameter field="TEXT" name="DATASOURCE_ALIAS" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="PROPAGATE_RECORD_SET" value="false"/>
    <elementParameter field="COLUMN_LIST" name="RECORD_SET_COLUMN" value=""/>
    <elementParameter field="CHECK" name="USE_PREPAREDSTATEMENT" value="false"/>
    <elementParameter field="TABLE" name="SET_PREPAREDSTATEMENT_PARAMETERS"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="TEXT" name="COMMIT_EVERY" value="10000"/>
    <elementParameter field="TEXT" name="LABEL" value="intmd_f_sub_billing_activity_&lt;br>reload"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJDBCRow_4"/>
    <metadata connector="REJECT" name="REJECT">
      <column defaultValue="" key="false" length="255" name="errorCode" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
      <column defaultValue="" key="false" length="255" name="errorMessage" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tJDBCRow" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="96" posY="512">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_5"/>
    <elementParameter field="DIRECTORY" name="JAVA_LIBRARY_PATH" value="C:\Talend\Talend-Tools-Studio-20150508_1414-V5.6.2\configuration\lib\java"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="true"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tJDBCConnection_1"/>
    <elementParameter field="TEXT" name="URL" value="&quot;jdbc:&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR"/>
    <elementParameter field="TEXT" name="DRIVER_CLASS" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" value="0RMsyjmybrE="/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;&#xD;&#xA;DELETE FROM &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_f_sub_billing_activity&#xD;&#xA;USING&#xD;&#xA;(select account_hist_id, payer_id, account_domain from &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_f_sub_billing_activity_reload) reload  -- V10 testing from DEV&#xD;&#xA;WHERE&#xD;&#xA;  reload.account_hist_id = &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_f_sub_billing_activity.account_hist_id and&#xD;&#xA;  reload.payer_id = &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_f_sub_billing_activity.payer_id and&#xD;&#xA;  reload.account_domain = &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_f_sub_billing_activity.account_domain;&#xD;&#xA;&quot;"/>
    <elementParameter field="CHECK" name="DIE_ON_ERROR" value="true"/>
    <elementParameter field="LABEL" name="NOTE" value="This option only applies when deploying and running in the Talend Runtime"/>
    <elementParameter field="CHECK" name="SPECIFY_DATASOURCE_ALIAS" value="false"/>
    <elementParameter field="TEXT" name="DATASOURCE_ALIAS" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="PROPAGATE_RECORD_SET" value="false"/>
    <elementParameter field="COLUMN_LIST" name="RECORD_SET_COLUMN" value=""/>
    <elementParameter field="CHECK" name="USE_PREPAREDSTATEMENT" value="false"/>
    <elementParameter field="TABLE" name="SET_PREPAREDSTATEMENT_PARAMETERS"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="TEXT" name="COMMIT_EVERY" value="10000"/>
    <elementParameter field="TEXT" name="LABEL" value="intmd_f_sub_billing_activity"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJDBCRow_5"/>
    <metadata connector="REJECT" name="REJECT">
      <column defaultValue="" key="false" length="255" name="errorCode" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
      <column defaultValue="" key="false" length="255" name="errorMessage" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tJDBCRow" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="288" posY="512">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_6"/>
    <elementParameter field="DIRECTORY" name="JAVA_LIBRARY_PATH" value="C:\Talend\Talend-Tools-Studio-20150508_1414-V5.6.2\configuration\lib\java"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="true"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tJDBCConnection_1"/>
    <elementParameter field="TEXT" name="URL" value="&quot;jdbc:&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR"/>
    <elementParameter field="TEXT" name="DRIVER_CLASS" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" value="0RMsyjmybrE="/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;&#xD;&#xA;INSERT INTO &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_f_sub_billing_activity&#xD;&#xA;SELECT * FROM &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_f_sub_billing_activity_reload;&#xD;&#xA;&quot;"/>
    <elementParameter field="CHECK" name="DIE_ON_ERROR" value="true"/>
    <elementParameter field="LABEL" name="NOTE" value="This option only applies when deploying and running in the Talend Runtime"/>
    <elementParameter field="CHECK" name="SPECIFY_DATASOURCE_ALIAS" value="false"/>
    <elementParameter field="TEXT" name="DATASOURCE_ALIAS" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="PROPAGATE_RECORD_SET" value="false"/>
    <elementParameter field="COLUMN_LIST" name="RECORD_SET_COLUMN" value=""/>
    <elementParameter field="CHECK" name="USE_PREPAREDSTATEMENT" value="false"/>
    <elementParameter field="TABLE" name="SET_PREPAREDSTATEMENT_PARAMETERS"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="TEXT" name="COMMIT_EVERY" value="10000"/>
    <elementParameter field="TEXT" name="LABEL" value="intmd_f_sub_billing_activity"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJDBCRow_6"/>
    <metadata connector="REJECT" name="REJECT">
      <column defaultValue="" key="false" length="255" name="errorCode" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
      <column defaultValue="" key="false" length="255" name="errorMessage" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tJDBCRow" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="96" posY="640">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_7"/>
    <elementParameter field="DIRECTORY" name="JAVA_LIBRARY_PATH" value="C:\Talend\Talend-Tools-Studio-20150508_1414-V5.6.2\configuration\lib\java"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="true"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tJDBCConnection_1"/>
    <elementParameter field="TEXT" name="URL" value="&quot;jdbc:&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR"/>
    <elementParameter field="TEXT" name="DRIVER_CLASS" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" value="0RMsyjmybrE="/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;&#xD;&#xA;DELETE FROM &quot;+globalMap.get(&quot;stg&quot;)+&quot;.intmd_account_activity;  &#xD;&#xA;&quot;"/>
    <elementParameter field="CHECK" name="DIE_ON_ERROR" value="true"/>
    <elementParameter field="LABEL" name="NOTE" value="This option only applies when deploying and running in the Talend Runtime"/>
    <elementParameter field="CHECK" name="SPECIFY_DATASOURCE_ALIAS" value="false"/>
    <elementParameter field="TEXT" name="DATASOURCE_ALIAS" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="PROPAGATE_RECORD_SET" value="false"/>
    <elementParameter field="COLUMN_LIST" name="RECORD_SET_COLUMN" value=""/>
    <elementParameter field="CHECK" name="USE_PREPAREDSTATEMENT" value="false"/>
    <elementParameter field="TABLE" name="SET_PREPAREDSTATEMENT_PARAMETERS"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="TEXT" name="COMMIT_EVERY" value="10000"/>
    <elementParameter field="TEXT" name="LABEL" value="intmd_account_activity"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJDBCRow_7"/>
    <metadata connector="REJECT" name="REJECT">
      <column defaultValue="" key="false" length="255" name="errorCode" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
      <column defaultValue="" key="false" length="255" name="errorMessage" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tJDBCRow" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="288" posY="640">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_8"/>
    <elementParameter field="DIRECTORY" name="JAVA_LIBRARY_PATH" value="C:\Talend\Talend-Tools-Studio-20150508_1414-V5.6.2\configuration\lib\java"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="true"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tJDBCConnection_1"/>
    <elementParameter field="TEXT" name="URL" value="&quot;jdbc:&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR"/>
    <elementParameter field="TEXT" name="DRIVER_CLASS" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" value="0RMsyjmybrE="/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;&#xD;&#xA;UPDATE &quot;+globalMap.get(&quot;meta&quot;)+&quot;.etl_job_log SET&#xD;&#xA;  job_status = 'DONE',&#xD;&#xA;  end_time = to_timestamp_ntz(CURRENT_TIMESTAMP()),&#xD;&#xA;  last_updated_ts = to_timestamp_ntz(CURRENT_TIMESTAMP()),&#xD;&#xA;  last_updated_by =  '&quot;+jobName+&quot;'&#xD;&#xA;--from &quot;+globalMap.get(&quot;meta&quot;)+&quot;.etl_job_log&#xD;&#xA;WHERE run_id = (select &#xD;&#xA;                  max(run_id) &#xD;&#xA;               from &#xD;&#xA;                  &quot;+globalMap.get(&quot;meta&quot;)+&quot;.etl_job_log &#xD;&#xA;               where &#xD;&#xA;                  job_Name = '&quot;+jobName+&quot;'  --'&quot; + jobName + &quot;' &#xD;&#xA;               )&#xD;&#xA;               and job_Name = '&quot;+jobName+&quot;';&#xD;&#xA;&quot;"/>
    <elementParameter field="CHECK" name="DIE_ON_ERROR" value="true"/>
    <elementParameter field="LABEL" name="NOTE" value="This option only applies when deploying and running in the Talend Runtime"/>
    <elementParameter field="CHECK" name="SPECIFY_DATASOURCE_ALIAS" value="false"/>
    <elementParameter field="TEXT" name="DATASOURCE_ALIAS" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="PROPAGATE_RECORD_SET" value="false"/>
    <elementParameter field="COLUMN_LIST" name="RECORD_SET_COLUMN" value=""/>
    <elementParameter field="CHECK" name="USE_PREPAREDSTATEMENT" value="false"/>
    <elementParameter field="TABLE" name="SET_PREPAREDSTATEMENT_PARAMETERS"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="TEXT" name="COMMIT_EVERY" value="10000"/>
    <elementParameter field="TEXT" name="LABEL" value="etl_job_log"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tJDBCRow_8"/>
    <metadata connector="REJECT" name="REJECT">
      <column defaultValue="" key="false" length="255" name="errorCode" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
      <column defaultValue="" key="false" length="255" name="errorMessage" nullable="true" precision="0" sourceType="" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tJDBCClose" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="416" posY="128">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCClose_1"/>
    <elementParameter field="DIRECTORY" name="JAVA_LIBRARY_PATH" value="C:\Talend\Talend-Tools-Studio-20150508_1414-V5.6.2\configuration\lib\java"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tJDBCConnection_1"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
  </node>
  <node componentName="tPostjob" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="416" posY="32">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tPostjob_1"/>
    <elementParameter field="DIRECTORY" name="JAVA_LIBRARY_PATH" value="C:\Talend\Talend-Tools-Studio-20150508_1414-V5.6.2\configuration\lib\java"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
  </node>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tJava_1" offsetLabelX="0" offsetLabelY="0" source="tJava_1" target="tJava_2">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="OnComponentOk1"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tJava_2" offsetLabelX="0" offsetLabelY="0" source="tJava_2" target="tJDBCConnection_1">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="OnComponentOk2"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tJDBCConnection_1" offsetLabelX="0" offsetLabelY="0" source="tJDBCConnection_1" target="tJDBCRow_1">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="OnComponentOk3"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tJDBCRow_1" offsetLabelX="0" offsetLabelY="0" outputId="1" source="tJDBCRow_1" target="tJDBCRow_2">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="OnComponentOk4"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tJDBCRow_1" offsetLabelX="0" offsetLabelY="0" outputId="2" source="tJDBCRow_1" target="tJDBCRow_3">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="OnComponentOk5"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tJDBCRow_3" offsetLabelX="0" offsetLabelY="0" outputId="1" source="tJDBCRow_3" target="tJDBCRow_4">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="OnComponentOk6"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tJDBCRow_3" offsetLabelX="0" offsetLabelY="0" outputId="2" source="tJDBCRow_3" target="tJDBCRow_5">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="OnComponentOk7"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tJDBCRow_5" offsetLabelX="0" offsetLabelY="0" outputId="1" source="tJDBCRow_5" target="tJDBCRow_6">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="OnComponentOk8"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tJDBCRow_5" offsetLabelX="0" offsetLabelY="0" outputId="2" source="tJDBCRow_5" target="tJDBCRow_7">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="OnComponentOk9"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tJDBCRow_7" offsetLabelX="0" offsetLabelY="0" source="tJDBCRow_7" target="tJDBCRow_8">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="OnComponentOk10"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tPostjob_1" offsetLabelX="0" offsetLabelY="0" source="tPostjob_1" target="tJDBCClose_1">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="OnComponentOk11"/>
  </connection>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJava_1"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="160;190;240"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="220;220;250"/>
  </subjob>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJava_2"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="160;190;240"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="220;220;250"/>
  </subjob>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCConnection_1"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="160;190;240"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="220;220;250"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_1"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="Insert"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="160;190;240"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="255;128;128"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_2"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="remove overlap rows"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="160;190;240"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="255;255;128"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_3"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="Delete from reload table"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="160;190;240"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="128;255;128"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_4"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="Insert into temp table"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="160;190;240"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="128;255;128"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_5"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="Delete"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="160;190;240"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="255;255;128"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_6"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="Insert into intmd_account_activity"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="160;190;240"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="255;255;128"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_7"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="delete rows from intmd_account_activity"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="160;190;240"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="255;255;128"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCRow_8"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="Update"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="160;190;240"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="255;128;128"/>
  </subjob>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tJDBCClose_1"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="160;190;240"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="220;220;250"/>
  </subjob>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tPostjob_1"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="230;100;0"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="255;220;180"/>
  </subjob>
</talendfile:ProcessType>
